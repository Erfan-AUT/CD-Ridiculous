
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftNOTleftLTLEGTGEEQNErightASSIGNleftSUMSUBleftMULDIVMODAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB blockdeclist : declist dec\n    | epsdec : vardec\n    | funcdecvardec : idlist COLON type SEMICOLONfuncdec : FUNCTION ID LRB paramdecs RRB COLON type block\n    | FUNCTION ID LRB paramdecs RRB blocktype : INTEGER\n    | FLOAT\n    | BOOLEANiddec : lvalue ASSIGN exp\n    iddec : lvalueidlist : idlist COMMA iddec\n    idlist : iddecparamdecs : paramdecslist\n    | epsparamdecslist : paramdec\n    | paramdecslist COMMA paramdec\n    paramdec : ID LSB RSB COLON typeparamdec : ID COLON typeblock : LCB stmtlist RCBstmtlist : stmtlist stmt\n    | epslvalue : ID LSB exp RSB\n    | ID LRB explist RRBlvalue : IDcase : WHERE const COLON stmtlistcases : cases case\n    | eps\n    stmt : ostmt\n    | cstmtostmt : IF LRB exp RRB cstmt\n    | IF LRB exp RRB ostmt\n    | IF LRB exp RRB cstmt elseiflist ELSE ostmt\n    | FOR LRB exp SEMICOLON exp SEMICOLON exp RRB ostmt\n    | FOR LRB ID IN ID RRB ostmt\n    | WHILE LRB exp RRB ostmt\n    cstmt : simple\n    | IF LRB exp RRB cstmt elseiflist ELSE cstmt\n    | FOR LRB exp SEMICOLON exp SEMICOLON exp RRB cstmt\n    | FOR LRB ID IN ID RRB cstmt\n    | WHILE LRB exp RRB cstmt\n    elseiflist : elseiflist ELSEIF LRB exp RRB cstmt\n    | epssimple : RETURN exp SEMICOLON\n    | exp SEMICOLON\n    | block\n    | vardec\n    | ON LRB exp RRB LCB cases RCB SEMICOLON\n    | PRINT LRB ID RRB SEMICOLONrelop : GT\n    | GE\n    | LT\n    | LE\n    | EQ\n    | NEexp : exp relop exp %prec LT\n    | lvalue %prec OR\n    | LRB exp RRB\n    | SUB exp\n    | NOT expexp : lvalue ASSIGN expexp : constexp : exp operator exp %prec MULoperator : AND\n    | OR\n    | SUM\n    | SUB\n    | MUL\n    | DIV\n    | MODconst : INTEGERNUMBER\n    | FLOATNUMBER\n    | TRUE\n    | FALSEexplist : exp\n    | explist COMMA exp\n    | epseps :'
    
_lr_action_items = {'MAIN':([0,2,3,5,6,7,43,82,100,121,],[-80,4,-3,-2,-4,-5,-6,-22,-8,-7,]),'FUNCTION':([0,2,3,5,6,7,43,82,100,121,],[-80,9,-3,-2,-4,-5,-6,-22,-8,-7,]),'ID':([0,2,3,5,6,7,9,15,17,18,19,26,29,30,31,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,76,82,83,84,85,90,91,92,93,100,102,103,104,105,107,108,109,116,121,122,123,124,125,129,130,135,136,138,139,142,143,144,145,149,155,156,160,161,162,163,164,165,166,167,168,170,174,175,176,178,179,180,181,182,188,189,190,191,196,197,198,199,204,205,206,208,],[-80,10,-3,-2,-4,-5,16,10,10,10,10,44,10,10,10,-80,-6,10,10,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,10,10,10,-24,44,-22,-23,-31,-32,-39,10,-48,-49,-8,10,-47,114,10,10,118,10,-46,-7,10,10,134,10,-33,-34,-38,-43,-51,10,152,10,10,10,10,-37,-42,10,-40,-35,10,10,173,10,10,-50,-33,-36,-41,-80,10,10,10,10,10,10,194,10,10,10,10,202,10,10,10,10,10,]),'$end':([1,41,82,],[0,-1,-22,]),'LRB':([4,10,16,17,18,19,29,30,31,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,86,88,89,90,91,92,93,94,95,102,103,104,105,107,109,114,116,122,123,125,128,129,130,131,132,135,136,138,139,142,143,144,145,149,150,152,155,156,160,161,162,163,164,166,167,168,170,174,175,176,178,179,180,181,182,184,185,186,188,189,190,191,194,196,197,199,204,205,206,208,],[13,18,26,29,29,29,29,29,29,-80,-6,29,29,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,29,29,29,-24,-22,-23,-31,-32,102,104,105,-39,29,-48,-49,107,108,29,-47,29,29,29,29,18,-46,29,29,29,139,-33,-34,142,143,-38,-43,-51,29,29,29,29,29,29,163,18,-37,-42,29,-40,-35,29,29,29,29,-50,-33,-36,-41,-80,29,29,29,29,29,188,189,190,29,29,29,29,18,29,29,29,29,29,29,29,]),'COLON':([8,10,11,12,25,28,32,33,34,35,36,40,44,49,67,68,69,75,77,78,79,80,96,97,119,169,],[14,-27,-15,-13,-14,-59,-64,-73,-74,-75,-76,-12,74,-25,-61,-62,-26,99,-58,-65,-63,-60,-13,110,-12,176,]),'COMMA':([8,10,11,12,18,22,23,24,25,28,32,33,34,35,36,37,38,39,40,46,48,49,67,68,69,77,78,79,80,81,96,98,101,119,120,],[15,-27,-15,-13,-80,-9,-10,-11,-14,-59,-64,-73,-74,-75,-76,70,-77,-79,-12,76,-18,-25,-61,-62,-26,-58,-65,-63,-60,-78,-13,-21,-19,-12,-20,]),'LSB':([10,44,114,152,194,],[17,73,17,17,17,]),'ASSIGN':([10,12,28,49,69,96,114,152,194,],[-27,19,65,-25,-26,109,-27,-27,-27,]),'RSB':([10,27,28,32,33,34,35,36,49,67,68,69,73,77,78,79,80,],[-27,49,-59,-64,-73,-74,-75,-76,-25,-61,-62,-26,97,-58,-65,-63,-60,]),'GT':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,52,-59,-64,-73,-74,-75,-76,52,52,-25,52,-61,52,-26,-58,-65,-63,-60,52,52,-59,52,52,52,-27,52,52,-63,52,52,52,-27,52,52,52,52,52,52,52,-27,52,52,52,]),'GE':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,53,-59,-64,-73,-74,-75,-76,53,53,-25,53,-61,53,-26,-58,-65,-63,-60,53,53,-59,53,53,53,-27,53,53,-63,53,53,53,-27,53,53,53,53,53,53,53,-27,53,53,53,]),'LT':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,54,-59,-64,-73,-74,-75,-76,54,54,-25,54,-61,54,-26,-58,-65,-63,-60,54,54,-59,54,54,54,-27,54,54,-63,54,54,54,-27,54,54,54,54,54,54,54,-27,54,54,54,]),'LE':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,55,-59,-64,-73,-74,-75,-76,55,55,-25,55,-61,55,-26,-58,-65,-63,-60,55,55,-59,55,55,55,-27,55,55,-63,55,55,55,-27,55,55,55,55,55,55,55,-27,55,55,55,]),'EQ':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,56,-59,-64,-73,-74,-75,-76,56,56,-25,56,-61,56,-26,-58,-65,-63,-60,56,56,-59,56,56,56,-27,56,56,-63,56,56,56,-27,56,56,56,56,56,56,56,-27,56,56,56,]),'NE':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,57,-59,-64,-73,-74,-75,-76,57,57,-25,57,-61,57,-26,-58,-65,-63,-60,57,57,-59,57,57,57,-27,57,57,-63,57,57,57,-27,57,57,57,57,57,57,57,-27,57,57,57,]),'AND':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,58,-59,-64,-73,-74,-75,-76,58,58,-25,58,-61,-62,-26,-58,-65,-63,-60,58,58,-59,58,58,58,-27,58,58,-63,58,58,58,-27,58,58,58,58,58,58,58,-27,58,58,58,]),'OR':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,59,-59,-64,-73,-74,-75,-76,59,59,-25,59,-61,-62,-26,-58,-65,-63,-60,59,59,-59,59,59,59,-27,59,59,-63,59,59,59,-27,59,59,59,59,59,59,59,-27,59,59,59,]),'SUM':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,60,-59,-64,-73,-74,-75,-76,60,60,-25,60,-61,60,-26,60,-65,60,-60,60,60,-59,60,60,60,-27,60,60,60,60,60,60,-27,60,60,60,60,60,60,60,-27,60,60,60,]),'SUB':([10,17,18,19,27,28,29,30,31,32,33,34,35,36,38,40,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,87,90,91,92,93,96,102,103,104,105,106,107,109,112,113,114,115,116,117,119,122,123,125,129,130,133,135,136,138,139,142,143,144,145,148,149,151,152,153,154,155,156,160,161,162,163,164,166,167,168,170,171,172,174,175,176,178,179,180,181,182,187,188,189,190,191,192,193,194,195,196,197,199,201,204,205,206,207,208,],[-27,30,30,30,61,-59,30,30,30,-64,-73,-74,-75,-76,61,61,-80,-6,-25,30,30,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,30,61,-61,61,-26,30,30,-24,61,-65,61,-60,61,-22,-23,-31,-32,61,-39,30,-48,-49,-59,30,-47,30,30,61,30,30,61,61,-27,61,-46,61,61,30,30,30,-33,-34,61,-38,-43,-51,30,30,30,30,30,61,30,61,-27,61,61,-37,-42,30,-40,-35,30,30,30,30,-50,-33,61,61,-36,-41,-80,30,30,30,30,30,61,30,30,30,30,61,61,-27,61,30,30,30,61,30,30,30,61,30,]),'MUL':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,62,-59,-64,-73,-74,-75,-76,62,62,-25,62,62,62,-26,62,-65,62,-60,62,62,-59,62,62,62,-27,62,62,62,62,62,62,-27,62,62,62,62,62,62,62,-27,62,62,62,]),'DIV':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,63,-59,-64,-73,-74,-75,-76,63,63,-25,63,63,63,-26,63,-65,63,-60,63,63,-59,63,63,63,-27,63,63,63,63,63,63,-27,63,63,63,63,63,63,63,-27,63,63,63,]),'MOD':([10,27,28,32,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,133,148,151,152,153,154,171,172,187,192,193,194,195,201,207,],[-27,64,-59,-64,-73,-74,-75,-76,64,64,-25,64,64,64,-26,64,-65,64,-60,64,64,-59,64,64,64,-27,64,64,64,64,64,64,-27,64,64,64,64,64,64,64,-27,64,64,64,]),'RRB':([10,13,18,22,23,24,26,28,32,33,34,35,36,37,38,39,45,46,47,48,49,66,67,68,69,77,78,79,80,81,98,101,112,115,117,118,120,134,148,153,154,171,173,187,192,195,202,207,],[-27,20,-80,-9,-10,-11,-80,-59,-64,-73,-74,-75,-76,69,-77,-79,75,-16,-17,-18,-25,80,-61,-62,-26,-58,-65,-63,-60,-78,-21,-19,122,125,126,127,-20,145,160,166,167,178,180,191,196,199,205,208,]),'SEMICOLON':([10,21,22,23,24,28,32,33,34,35,36,49,67,68,69,77,78,79,80,87,96,106,113,114,119,127,133,151,152,157,172,193,194,201,],[-27,43,-9,-10,-11,-59,-64,-73,-74,-75,-76,-25,-61,-62,-26,-58,-65,-63,-60,103,-59,116,123,-27,-63,138,144,164,-27,168,179,197,-27,204,]),'INTEGER':([14,74,99,110,],[22,22,22,22,]),'FLOAT':([14,74,99,110,],[23,23,23,23,]),'BOOLEAN':([14,74,99,110,],[24,24,24,24,]),'NOT':([17,18,19,29,30,31,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,90,91,92,93,102,103,104,105,107,109,116,122,123,125,129,130,135,136,138,139,142,143,144,145,149,155,156,160,161,162,163,164,166,167,168,170,174,175,176,178,179,180,181,182,188,189,190,191,196,197,199,204,205,206,208,],[31,31,31,31,31,31,-80,-6,31,31,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,31,31,31,-24,-22,-23,-31,-32,-39,31,-48,-49,31,-47,31,31,31,31,-46,31,31,31,-33,-34,-38,-43,-51,31,31,31,31,31,31,-37,-42,31,-40,-35,31,31,31,31,-50,-33,-36,-41,-80,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'INTEGERNUMBER':([17,18,19,29,30,31,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,90,91,92,93,102,103,104,105,107,109,116,122,123,125,129,130,135,136,138,139,142,143,144,145,149,155,156,159,160,161,162,163,164,166,167,168,170,174,175,176,178,179,180,181,182,188,189,190,191,196,197,199,204,205,206,208,],[33,33,33,33,33,33,-80,-6,33,33,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,33,33,33,-24,-22,-23,-31,-32,-39,33,-48,-49,33,-47,33,33,33,33,-46,33,33,33,-33,-34,-38,-43,-51,33,33,33,33,33,33,-37,-42,33,33,-40,-35,33,33,33,33,-50,-33,-36,-41,-80,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FLOATNUMBER':([17,18,19,29,30,31,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,90,91,92,93,102,103,104,105,107,109,116,122,123,125,129,130,135,136,138,139,142,143,144,145,149,155,156,159,160,161,162,163,164,166,167,168,170,174,175,176,178,179,180,181,182,188,189,190,191,196,197,199,204,205,206,208,],[34,34,34,34,34,34,-80,-6,34,34,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,34,34,34,-24,-22,-23,-31,-32,-39,34,-48,-49,34,-47,34,34,34,34,-46,34,34,34,-33,-34,-38,-43,-51,34,34,34,34,34,34,-37,-42,34,34,-40,-35,34,34,34,34,-50,-33,-36,-41,-80,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TRUE':([17,18,19,29,30,31,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,90,91,92,93,102,103,104,105,107,109,116,122,123,125,129,130,135,136,138,139,142,143,144,145,149,155,156,159,160,161,162,163,164,166,167,168,170,174,175,176,178,179,180,181,182,188,189,190,191,196,197,199,204,205,206,208,],[35,35,35,35,35,35,-80,-6,35,35,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,35,35,35,-24,-22,-23,-31,-32,-39,35,-48,-49,35,-47,35,35,35,35,-46,35,35,35,-33,-34,-38,-43,-51,35,35,35,35,35,35,-37,-42,35,35,-40,-35,35,35,35,35,-50,-33,-36,-41,-80,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FALSE':([17,18,19,29,30,31,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,90,91,92,93,102,103,104,105,107,109,116,122,123,125,129,130,135,136,138,139,142,143,144,145,149,155,156,159,160,161,162,163,164,166,167,168,170,174,175,176,178,179,180,181,182,188,189,190,191,196,197,199,204,205,206,208,],[36,36,36,36,36,36,-80,-6,36,36,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,36,36,36,-24,-22,-23,-31,-32,-39,36,-48,-49,36,-47,36,36,36,36,-46,36,36,36,-33,-34,-38,-43,-51,36,36,36,36,36,36,-37,-42,36,36,-40,-35,36,36,36,36,-50,-33,-36,-41,-80,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'LCB':([20,22,23,24,42,43,71,72,75,82,83,84,85,90,92,93,103,111,116,122,125,126,129,130,135,136,138,145,149,155,156,160,161,162,166,167,168,170,174,175,176,178,180,181,182,191,196,199,205,206,208,],[42,-9,-10,-11,-80,-6,42,-24,42,-22,-23,-31,-32,-39,-48,-49,-47,42,-46,42,42,137,-33,-34,-38,-43,-51,42,42,-37,-42,42,-40,-35,42,42,-50,-33,-36,-41,-80,42,42,42,42,42,42,42,42,42,42,]),'RCB':([42,43,71,72,82,83,84,85,90,92,93,103,116,129,130,135,136,137,138,146,147,155,156,158,161,162,168,170,174,175,176,181,],[-80,-6,82,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,-33,-34,-38,-43,-80,-51,157,-30,-37,-42,-29,-40,-35,-50,-33,-36,-41,-80,-28,]),'IF':([42,43,71,72,82,83,84,85,90,92,93,103,116,122,125,129,130,135,136,138,145,149,155,156,160,161,162,166,167,168,170,174,175,176,178,180,181,182,191,196,199,205,206,208,],[-80,-6,86,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,128,86,-33,-34,-38,-43,-51,86,86,-37,-42,128,-40,-35,128,86,-50,-33,-36,-41,-80,184,128,86,128,128,184,184,184,184,184,]),'FOR':([42,43,71,72,82,83,84,85,90,92,93,103,116,122,125,129,130,135,136,138,145,149,155,156,160,161,162,166,167,168,170,174,175,176,178,180,181,182,191,196,199,205,206,208,],[-80,-6,88,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,131,88,-33,-34,-38,-43,-51,88,88,-37,-42,131,-40,-35,131,88,-50,-33,-36,-41,-80,185,131,88,131,131,185,185,185,185,185,]),'WHILE':([42,43,71,72,82,83,84,85,90,92,93,103,116,122,125,129,130,135,136,138,145,149,155,156,160,161,162,166,167,168,170,174,175,176,178,180,181,182,191,196,199,205,206,208,],[-80,-6,89,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,132,89,-33,-34,-38,-43,-51,89,89,-37,-42,132,-40,-35,132,89,-50,-33,-36,-41,-80,186,132,89,132,132,186,186,186,186,186,]),'RETURN':([42,43,71,72,82,83,84,85,90,92,93,103,116,122,125,129,130,135,136,138,145,149,155,156,160,161,162,166,167,168,170,174,175,176,178,180,181,182,191,196,199,205,206,208,],[-80,-6,91,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,91,91,-33,-34,-38,-43,-51,91,91,-37,-42,91,-40,-35,91,91,-50,-33,-36,-41,-80,91,91,91,91,91,91,91,91,91,91,]),'ON':([42,43,71,72,82,83,84,85,90,92,93,103,116,122,125,129,130,135,136,138,145,149,155,156,160,161,162,166,167,168,170,174,175,176,178,180,181,182,191,196,199,205,206,208,],[-80,-6,94,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,94,94,-33,-34,-38,-43,-51,94,94,-37,-42,94,-40,-35,94,94,-50,-33,-36,-41,-80,94,94,94,94,94,94,94,94,94,94,]),'PRINT':([42,43,71,72,82,83,84,85,90,92,93,103,116,122,125,129,130,135,136,138,145,149,155,156,160,161,162,166,167,168,170,174,175,176,178,180,181,182,191,196,199,205,206,208,],[-80,-6,95,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,95,95,-33,-34,-38,-43,-51,95,95,-37,-42,95,-40,-35,95,95,-50,-33,-36,-41,-80,95,95,95,95,95,95,95,95,95,95,]),'ELSE':([43,82,90,92,93,103,116,129,136,138,140,141,156,161,168,170,175,177,183,200,203,],[-6,-22,-39,-48,-49,-47,-46,-80,-43,-51,149,-45,-42,-40,-50,-80,-41,182,-44,-80,206,]),'ELSEIF':([43,82,90,92,93,103,116,129,136,138,140,141,156,161,168,170,175,177,183,200,203,],[-6,-22,-39,-48,-49,-47,-46,-80,-43,-51,150,-45,-42,-40,-50,-80,-41,150,-44,-80,150,]),'WHERE':([43,72,82,83,84,85,90,92,93,103,116,129,130,135,136,137,138,146,147,155,156,158,161,162,168,170,174,175,176,181,],[-6,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,-33,-34,-38,-43,-80,-51,159,-30,-37,-42,-29,-40,-35,-50,-33,-36,-41,-80,-28,]),'IN':([114,152,194,],[124,165,198,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'eps':([0,18,26,42,129,137,170,176,200,],[3,39,47,72,141,147,141,72,141,]),'dec':([2,],[5,]),'vardec':([2,71,122,125,145,149,160,166,167,178,180,181,182,191,196,199,205,206,208,],[6,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'funcdec':([2,],[7,]),'idlist':([2,71,122,125,145,149,160,166,167,178,180,181,182,191,196,199,205,206,208,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'iddec':([2,15,71,122,125,145,149,160,166,167,178,180,181,182,191,196,199,205,206,208,],[11,25,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'lvalue':([2,15,17,18,19,29,30,31,50,51,65,70,71,91,102,104,105,107,109,122,123,125,139,142,143,144,145,149,160,163,164,166,167,178,179,180,181,182,188,189,190,191,196,197,199,204,205,206,208,],[12,12,28,28,28,28,28,28,28,28,28,28,96,28,28,28,28,28,28,96,28,96,28,28,28,28,96,96,96,28,28,96,96,96,28,96,96,96,28,28,28,96,96,28,96,28,96,96,96,]),'type':([14,74,99,110,],[21,98,111,120,]),'exp':([17,18,19,29,30,31,50,51,65,70,71,91,102,104,105,107,109,122,123,125,139,142,143,144,145,149,160,163,164,166,167,178,179,180,181,182,188,189,190,191,196,197,199,204,205,206,208,],[27,38,40,66,67,68,77,78,79,81,87,106,112,113,115,117,119,87,133,87,148,151,153,154,87,87,87,171,172,87,87,87,187,87,87,87,192,193,195,87,87,201,87,207,87,87,87,]),'const':([17,18,19,29,30,31,50,51,65,70,71,91,102,104,105,107,109,122,123,125,139,142,143,144,145,149,159,160,163,164,166,167,178,179,180,181,182,188,189,190,191,196,197,199,204,205,206,208,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,169,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'explist':([18,],[37,]),'block':([20,71,75,111,122,125,145,149,160,166,167,178,180,181,182,191,196,199,205,206,208,],[41,92,100,121,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'paramdecs':([26,],[45,]),'paramdecslist':([26,],[46,]),'paramdec':([26,76,],[48,101,]),'relop':([27,38,40,66,67,68,77,78,79,81,87,106,112,113,115,117,119,133,148,151,153,154,171,172,187,192,193,195,201,207,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'operator':([27,38,40,66,67,68,77,78,79,81,87,106,112,113,115,117,119,133,148,151,153,154,171,172,187,192,193,195,201,207,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'stmtlist':([42,176,],[71,181,]),'stmt':([71,181,],[83,83,]),'ostmt':([71,122,125,145,149,160,166,167,180,181,182,191,],[84,130,135,155,162,130,135,174,155,84,162,174,]),'cstmt':([71,122,125,145,149,160,166,167,178,180,181,182,191,196,199,205,206,208,],[85,129,136,156,161,170,136,175,183,156,85,161,175,200,136,156,161,175,]),'simple':([71,122,125,145,149,160,166,167,178,180,181,182,191,196,199,205,206,208,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'elseiflist':([129,170,200,],[140,177,203,]),'cases':([137,],[146,]),'case':([146,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program','parser.py',33),
  ('declist -> declist dec','declist',2,'p_declist','parser.py',38),
  ('declist -> eps','declist',1,'p_declist','parser.py',39),
  ('dec -> vardec','dec',1,'p_dec','parser.py',44),
  ('dec -> funcdec','dec',1,'p_dec','parser.py',45),
  ('vardec -> idlist COLON type SEMICOLON','vardec',4,'p_vardec','parser.py',50),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block','funcdec',8,'p_funcdec','parser.py',56),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB block','funcdec',6,'p_funcdec','parser.py',57),
  ('type -> INTEGER','type',1,'p_type','parser.py',62),
  ('type -> FLOAT','type',1,'p_type','parser.py',63),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',64),
  ('iddec -> lvalue ASSIGN exp','iddec',3,'p_iddec','parser.py',70),
  ('iddec -> lvalue','iddec',1,'p_single_iddec','parser.py',76),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist','parser.py',82),
  ('idlist -> iddec','idlist',1,'p_single_idlist','parser.py',89),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs','parser.py',95),
  ('paramdecs -> eps','paramdecs',1,'p_paramdecs','parser.py',96),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist','parser.py',101),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist','parser.py',102),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec','parser.py',108),
  ('paramdec -> ID COLON type','paramdec',3,'p_single_paramdec','parser.py',113),
  ('block -> LCB stmtlist RCB','block',3,'p_block','parser.py',118),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',123),
  ('stmtlist -> eps','stmtlist',1,'p_stmtlist','parser.py',124),
  ('lvalue -> ID LSB exp RSB','lvalue',4,'p_lvalue','parser.py',129),
  ('lvalue -> ID LRB explist RRB','lvalue',4,'p_lvalue','parser.py',130),
  ('lvalue -> ID','lvalue',1,'p_single_lvalue','parser.py',135),
  ('case -> WHERE const COLON stmtlist','case',4,'p_case','parser.py',140),
  ('cases -> cases case','cases',2,'p_cases','parser.py',145),
  ('cases -> eps','cases',1,'p_cases','parser.py',146),
  ('stmt -> ostmt','stmt',1,'p_stmt','parser.py',152),
  ('stmt -> cstmt','stmt',1,'p_stmt','parser.py',153),
  ('ostmt -> IF LRB exp RRB cstmt','ostmt',5,'p_ostmt','parser.py',158),
  ('ostmt -> IF LRB exp RRB ostmt','ostmt',5,'p_ostmt','parser.py',159),
  ('ostmt -> IF LRB exp RRB cstmt elseiflist ELSE ostmt','ostmt',8,'p_ostmt','parser.py',160),
  ('ostmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB ostmt','ostmt',9,'p_ostmt','parser.py',161),
  ('ostmt -> FOR LRB ID IN ID RRB ostmt','ostmt',7,'p_ostmt','parser.py',162),
  ('ostmt -> WHILE LRB exp RRB ostmt','ostmt',5,'p_ostmt','parser.py',163),
  ('cstmt -> simple','cstmt',1,'p_cstmt','parser.py',168),
  ('cstmt -> IF LRB exp RRB cstmt elseiflist ELSE cstmt','cstmt',8,'p_cstmt','parser.py',169),
  ('cstmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB cstmt','cstmt',9,'p_cstmt','parser.py',170),
  ('cstmt -> FOR LRB ID IN ID RRB cstmt','cstmt',7,'p_cstmt','parser.py',171),
  ('cstmt -> WHILE LRB exp RRB cstmt','cstmt',5,'p_cstmt','parser.py',172),
  ('elseiflist -> elseiflist ELSEIF LRB exp RRB cstmt','elseiflist',6,'p_elseiflist','parser.py',177),
  ('elseiflist -> eps','elseiflist',1,'p_elseiflist','parser.py',178),
  ('simple -> RETURN exp SEMICOLON','simple',3,'p_simple','parser.py',183),
  ('simple -> exp SEMICOLON','simple',2,'p_simple','parser.py',184),
  ('simple -> block','simple',1,'p_simple','parser.py',185),
  ('simple -> vardec','simple',1,'p_simple','parser.py',186),
  ('simple -> ON LRB exp RRB LCB cases RCB SEMICOLON','simple',8,'p_simple','parser.py',187),
  ('simple -> PRINT LRB ID RRB SEMICOLON','simple',5,'p_simple','parser.py',188),
  ('relop -> GT','relop',1,'p_relop','parser.py',193),
  ('relop -> GE','relop',1,'p_relop','parser.py',194),
  ('relop -> LT','relop',1,'p_relop','parser.py',195),
  ('relop -> LE','relop',1,'p_relop','parser.py',196),
  ('relop -> EQ','relop',1,'p_relop','parser.py',197),
  ('relop -> NE','relop',1,'p_relop','parser.py',198),
  ('exp -> exp relop exp','exp',3,'p_exp','parser.py',203),
  ('exp -> lvalue','exp',1,'p_exp','parser.py',204),
  ('exp -> LRB exp RRB','exp',3,'p_exp','parser.py',205),
  ('exp -> SUB exp','exp',2,'p_exp','parser.py',206),
  ('exp -> NOT exp','exp',2,'p_exp','parser.py',207),
  ('exp -> lvalue ASSIGN exp','exp',3,'p_lvalue_assign','parser.py',212),
  ('exp -> const','exp',1,'p_expconst','parser.py',220),
  ('exp -> exp operator exp','exp',3,'p_binop','parser.py',226),
  ('operator -> AND','operator',1,'p_operator','parser.py',231),
  ('operator -> OR','operator',1,'p_operator','parser.py',232),
  ('operator -> SUM','operator',1,'p_operator','parser.py',233),
  ('operator -> SUB','operator',1,'p_operator','parser.py',234),
  ('operator -> MUL','operator',1,'p_operator','parser.py',235),
  ('operator -> DIV','operator',1,'p_operator','parser.py',236),
  ('operator -> MOD','operator',1,'p_operator','parser.py',237),
  ('const -> INTEGERNUMBER','const',1,'p_const','parser.py',243),
  ('const -> FLOATNUMBER','const',1,'p_const','parser.py',244),
  ('const -> TRUE','const',1,'p_const','parser.py',245),
  ('const -> FALSE','const',1,'p_const','parser.py',246),
  ('explist -> exp','explist',1,'p_explist','parser.py',259),
  ('explist -> explist COMMA exp','explist',3,'p_explist','parser.py',260),
  ('explist -> eps','explist',1,'p_explist','parser.py',261),
  ('eps -> <empty>','eps',0,'p_eps','parser.py',266),
]
