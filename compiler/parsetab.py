
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftNOTleftLTLEGTGEEQNErightASSIGNleftSUMSUBleftMULDIVMODAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB blockdeclist : declist dec\n    | epsdec : vardec\n    | funcdecvardec : idlist COLON typefuncdec : FUNCTION ID LRB paramdecs RRB COLON type block\n    | FUNCTION ID LRB paramdecs RRB blocktype : INTEGER\n    | FLOAT\n    | BOOLEANiddec : lvalue\n    | ID ASSIGN exp\n    idlist : iddec\n    | idlist COMMA iddec\n    paramdecs : paramdecslist\n    | epsparamdecslist : paramdec\n    | paramdecslist COMMA paramdec\n    paramdec : ID COLON type\n    | ID LSB RSB COLON typeblock : LCB stmtlist RCBstmtlist : stmtlist stmt\n    | epslvalue : ID\n    | ID LSB exp RSBcase : WHERE const COLON stmtlistcases : cases case\n    | eps\n    stmt : RETURN exp SEMICOLON\n    | exp SEMICOLON\n    | block\n    | vardec\n    | WHILE LRB exp LRB stmt\n    | ON LRB exp RRB LCB cases RCB SEMICOLON\n    | FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt\n    | FOR LRB ID IN RRB stmt\n    | IF LRB exp RRB stmt elseiflist\n    | IF LRB exp RRB stmt elseiflist ELSE stmt\n    | PRINT LRB ID RRB SEMICOLONelseiflist : elseiflist ELSEIF LRB exp RRB stmt\n    | epsrelop : GT\n    | GE\n    | LT\n    | LE\n    | EQ\n    | NEexp : lvalue ASSIGN exp\n    | exp operator exp\n    | exp relop exp\n    | const\n    | lvalue\n    | ID LRB explist RRB\n    | LRB exp RRB\n    | SUB exp\n    | NOT expoperator : AND\n    | OR\n    | SUM\n    | SUB\n    | MUL\n    | DIV\n    | MODconst : INTEGERNUMBER\n    | FLOATNUMBER\n    | TRUE\n    | FALSEexplist : exp\n    | explist COMMA exp\n    | epseps :'
    
_lr_action_items = {'MAIN':([0,2,3,5,6,7,20,21,22,23,79,95,117,],[-72,4,-3,-2,-4,-5,-6,-9,-10,-11,-22,-8,-7,]),'FUNCTION':([0,2,3,5,6,7,20,21,22,23,79,95,117,],[-72,9,-3,-2,-4,-5,-6,-9,-10,-11,-22,-8,-7,]),'ID':([0,2,3,5,6,7,9,15,17,18,20,21,22,23,25,30,31,32,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,71,79,80,81,83,84,95,98,100,101,102,103,104,105,109,117,118,120,122,124,127,128,129,132,133,134,135,140,142,144,145,146,147,148,150,151,152,],[-72,10,-3,-2,-4,-5,16,10,26,26,-6,-9,-10,-11,40,26,26,26,-72,26,26,26,-58,-59,-60,-61,-62,-63,-64,-43,-44,-45,-46,-47,-48,26,88,-24,40,-22,-23,26,-32,-33,-8,26,-31,26,26,113,26,115,-30,-7,88,26,88,-34,88,-72,-40,26,-37,-38,-42,88,-35,88,-39,26,-72,-36,88,88,-41,]),'$end':([1,38,79,],[0,-1,-22,]),'LRB':([4,16,17,18,20,21,22,23,26,28,29,30,31,32,33,34,35,36,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,97,98,100,101,102,103,104,109,110,113,118,120,122,124,127,128,129,132,133,134,135,140,141,142,144,145,146,147,148,150,151,152,],[13,25,30,30,-6,-9,-10,-11,45,-53,-52,30,30,30,-65,-66,-67,-68,-72,30,30,30,-58,-59,-60,-61,-62,-63,-64,-43,-44,-45,-46,-47,-48,30,-56,-57,-26,30,-24,-50,-51,-49,-55,-22,-23,30,-32,-33,101,102,103,45,104,105,-54,30,-31,30,30,30,30,-30,118,45,30,30,30,-34,30,-72,-40,30,-37,-38,-42,30,146,-35,30,-39,30,-72,-36,30,30,-41,]),'COLON':([8,10,11,12,24,26,27,28,29,33,34,35,36,40,63,64,65,70,75,76,77,78,88,91,93,97,143,],[14,-25,-14,-12,-15,-25,-13,-53,-52,-65,-66,-67,-68,68,-56,-57,-26,94,-50,-51,-49,-55,-25,-12,106,-54,147,]),'COMMA':([8,10,11,12,21,22,23,24,26,27,28,29,33,34,35,36,42,44,45,63,64,65,72,73,74,75,76,77,78,88,91,92,96,97,108,116,],[15,-25,-14,-12,-9,-10,-11,-15,-25,-13,-53,-52,-65,-66,-67,-68,71,-18,-72,-56,-57,-26,98,-69,-71,-50,-51,-49,-55,-25,-12,-20,-19,-54,-70,-21,]),'ASSIGN':([10,26,28,65,88,91,113,],[17,-25,61,-26,17,61,-25,]),'LSB':([10,26,40,88,113,],[18,18,69,18,18,]),'RRB':([13,21,22,23,25,26,28,29,33,34,35,36,41,42,43,44,45,62,63,64,65,72,73,74,75,76,77,78,92,96,97,108,111,114,115,116,121,139,149,],[19,-9,-10,-11,-72,-25,-53,-52,-65,-66,-67,-68,70,-16,-17,-18,-72,78,-56,-57,-26,97,-69,-71,-50,-51,-49,-55,-20,-19,-54,-70,119,122,123,-21,127,144,151,]),'INTEGER':([14,68,94,106,],[21,21,21,21,]),'FLOAT':([14,68,94,106,],[22,22,22,22,]),'BOOLEAN':([14,68,94,106,],[23,23,23,23,]),'SUB':([17,18,20,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,73,75,76,77,78,79,80,81,82,83,84,88,91,97,98,99,100,101,102,103,104,108,109,110,111,112,113,114,118,120,122,124,126,127,128,129,132,133,134,135,139,140,142,144,145,146,147,148,149,150,151,152,],[31,31,-6,-9,-10,-11,-25,51,-53,-52,31,31,31,-65,-66,-67,-68,51,-72,31,31,31,-58,-59,-60,-61,-62,-63,-64,-43,-44,-45,-46,-47,-48,31,51,-56,51,-26,31,-24,51,51,51,51,-55,-22,-23,31,51,-32,-33,-25,-53,-54,31,51,-31,31,31,31,31,51,-30,51,51,51,-25,51,31,31,31,-34,51,31,-72,-40,31,-37,-38,-42,51,31,-35,31,-39,31,-72,-36,51,31,31,-41,]),'NOT':([17,18,20,21,22,23,30,31,32,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,79,80,81,83,84,98,100,101,102,103,104,109,118,120,122,124,127,128,129,132,133,134,135,140,142,144,145,146,147,148,150,151,152,],[32,32,-6,-9,-10,-11,32,32,32,-72,32,32,32,-58,-59,-60,-61,-62,-63,-64,-43,-44,-45,-46,-47,-48,32,32,-24,-22,-23,32,-32,-33,32,-31,32,32,32,32,-30,32,32,32,-34,32,-72,-40,32,-37,-38,-42,32,-35,32,-39,32,-72,-36,32,32,-41,]),'INTEGERNUMBER':([17,18,20,21,22,23,30,31,32,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,79,80,81,83,84,98,100,101,102,103,104,109,118,120,122,124,127,128,129,132,133,134,135,138,140,142,144,145,146,147,148,150,151,152,],[33,33,-6,-9,-10,-11,33,33,33,-72,33,33,33,-58,-59,-60,-61,-62,-63,-64,-43,-44,-45,-46,-47,-48,33,33,-24,-22,-23,33,-32,-33,33,-31,33,33,33,33,-30,33,33,33,-34,33,-72,-40,33,-37,-38,-42,33,33,-35,33,-39,33,-72,-36,33,33,-41,]),'FLOATNUMBER':([17,18,20,21,22,23,30,31,32,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,79,80,81,83,84,98,100,101,102,103,104,109,118,120,122,124,127,128,129,132,133,134,135,138,140,142,144,145,146,147,148,150,151,152,],[34,34,-6,-9,-10,-11,34,34,34,-72,34,34,34,-58,-59,-60,-61,-62,-63,-64,-43,-44,-45,-46,-47,-48,34,34,-24,-22,-23,34,-32,-33,34,-31,34,34,34,34,-30,34,34,34,-34,34,-72,-40,34,-37,-38,-42,34,34,-35,34,-39,34,-72,-36,34,34,-41,]),'TRUE':([17,18,20,21,22,23,30,31,32,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,79,80,81,83,84,98,100,101,102,103,104,109,118,120,122,124,127,128,129,132,133,134,135,138,140,142,144,145,146,147,148,150,151,152,],[35,35,-6,-9,-10,-11,35,35,35,-72,35,35,35,-58,-59,-60,-61,-62,-63,-64,-43,-44,-45,-46,-47,-48,35,35,-24,-22,-23,35,-32,-33,35,-31,35,35,35,35,-30,35,35,35,-34,35,-72,-40,35,-37,-38,-42,35,35,-35,35,-39,35,-72,-36,35,35,-41,]),'FALSE':([17,18,20,21,22,23,30,31,32,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,79,80,81,83,84,98,100,101,102,103,104,109,118,120,122,124,127,128,129,132,133,134,135,138,140,142,144,145,146,147,148,150,151,152,],[36,36,-6,-9,-10,-11,36,36,36,-72,36,36,36,-58,-59,-60,-61,-62,-63,-64,-43,-44,-45,-46,-47,-48,36,36,-24,-22,-23,36,-32,-33,36,-31,36,36,36,36,-30,36,36,36,-34,36,-72,-40,36,-37,-38,-42,36,36,-35,36,-39,36,-72,-36,36,36,-41,]),'LCB':([19,20,21,22,23,39,66,67,70,79,80,83,84,100,107,109,118,119,122,124,127,128,129,133,134,135,140,142,144,145,147,148,150,151,152,],[39,-6,-9,-10,-11,-72,39,-24,39,-22,-23,-32,-33,-31,39,-30,39,125,39,-34,39,-72,-40,-37,-38,-42,39,-35,39,-39,-72,-36,39,39,-41,]),'RCB':([20,21,22,23,39,66,67,79,80,83,84,100,109,124,125,128,129,130,131,133,134,135,137,142,145,147,148,150,152,],[-6,-9,-10,-11,-72,79,-24,-22,-23,-32,-33,-31,-30,-34,-72,-72,-40,136,-29,-37,-38,-42,-28,-35,-39,-72,-36,-27,-41,]),'RETURN':([20,21,22,23,39,66,67,79,80,83,84,100,109,118,122,124,127,128,129,133,134,135,140,142,144,145,147,148,150,151,152,],[-6,-9,-10,-11,-72,81,-24,-22,-23,-32,-33,-31,-30,81,81,-34,81,-72,-40,-37,-38,-42,81,-35,81,-39,-72,-36,81,81,-41,]),'WHILE':([20,21,22,23,39,66,67,79,80,83,84,100,109,118,122,124,127,128,129,133,134,135,140,142,144,145,147,148,150,151,152,],[-6,-9,-10,-11,-72,85,-24,-22,-23,-32,-33,-31,-30,85,85,-34,85,-72,-40,-37,-38,-42,85,-35,85,-39,-72,-36,85,85,-41,]),'ON':([20,21,22,23,39,66,67,79,80,83,84,100,109,118,122,124,127,128,129,133,134,135,140,142,144,145,147,148,150,151,152,],[-6,-9,-10,-11,-72,86,-24,-22,-23,-32,-33,-31,-30,86,86,-34,86,-72,-40,-37,-38,-42,86,-35,86,-39,-72,-36,86,86,-41,]),'FOR':([20,21,22,23,39,66,67,79,80,83,84,100,109,118,122,124,127,128,129,133,134,135,140,142,144,145,147,148,150,151,152,],[-6,-9,-10,-11,-72,87,-24,-22,-23,-32,-33,-31,-30,87,87,-34,87,-72,-40,-37,-38,-42,87,-35,87,-39,-72,-36,87,87,-41,]),'IF':([20,21,22,23,39,66,67,79,80,83,84,100,109,118,122,124,127,128,129,133,134,135,140,142,144,145,147,148,150,151,152,],[-6,-9,-10,-11,-72,89,-24,-22,-23,-32,-33,-31,-30,89,89,-34,89,-72,-40,-37,-38,-42,89,-35,89,-39,-72,-36,89,89,-41,]),'PRINT':([20,21,22,23,39,66,67,79,80,83,84,100,109,118,122,124,127,128,129,133,134,135,140,142,144,145,147,148,150,151,152,],[-6,-9,-10,-11,-72,90,-24,-22,-23,-32,-33,-31,-30,90,90,-34,90,-72,-40,-37,-38,-42,90,-35,90,-39,-72,-36,90,90,-41,]),'ELSE':([20,21,22,23,79,83,84,100,109,124,128,129,133,134,135,142,145,148,152,],[-6,-9,-10,-11,-22,-32,-33,-31,-30,-34,-72,-40,-37,140,-42,-35,-39,-36,-41,]),'ELSEIF':([20,21,22,23,79,83,84,100,109,124,128,129,133,134,135,142,145,148,152,],[-6,-9,-10,-11,-22,-32,-33,-31,-30,-34,-72,-40,-37,141,-42,-35,-39,-36,-41,]),'WHERE':([20,21,22,23,67,79,80,83,84,100,109,124,125,128,129,130,131,133,134,135,137,142,145,147,148,150,152,],[-6,-9,-10,-11,-24,-22,-23,-32,-33,-31,-30,-34,-72,-72,-40,138,-29,-37,-38,-42,-28,-35,-39,-72,-36,-27,-41,]),'AND':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,48,-53,-52,-65,-66,-67,-68,48,48,-56,-57,-26,48,48,48,-49,-55,48,-25,-53,-54,48,48,48,48,48,-25,48,48,48,48,]),'OR':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,49,-53,-52,-65,-66,-67,-68,49,49,-56,-57,-26,49,49,49,-49,-55,49,-25,-53,-54,49,49,49,49,49,-25,49,49,49,49,]),'SUM':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,50,-53,-52,-65,-66,-67,-68,50,50,-56,50,-26,50,50,50,50,-55,50,-25,-53,-54,50,50,50,50,50,-25,50,50,50,50,]),'MUL':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,52,-53,-52,-65,-66,-67,-68,52,52,52,52,-26,52,52,52,52,-55,52,-25,-53,-54,52,52,52,52,52,-25,52,52,52,52,]),'DIV':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,53,-53,-52,-65,-66,-67,-68,53,53,53,53,-26,53,53,53,53,-55,53,-25,-53,-54,53,53,53,53,53,-25,53,53,53,53,]),'MOD':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,54,-53,-52,-65,-66,-67,-68,54,54,54,54,-26,54,54,54,54,-55,54,-25,-53,-54,54,54,54,54,54,-25,54,54,54,54,]),'GT':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,55,-53,-52,-65,-66,-67,-68,55,55,-56,55,-26,55,55,55,-49,-55,55,-25,-53,-54,55,55,55,55,55,-25,55,55,55,55,]),'GE':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,56,-53,-52,-65,-66,-67,-68,56,56,-56,56,-26,56,56,56,-49,-55,56,-25,-53,-54,56,56,56,56,56,-25,56,56,56,56,]),'LT':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,57,-53,-52,-65,-66,-67,-68,57,57,-56,57,-26,57,57,57,-49,-55,57,-25,-53,-54,57,57,57,57,57,-25,57,57,57,57,]),'LE':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,58,-53,-52,-65,-66,-67,-68,58,58,-56,58,-26,58,58,58,-49,-55,58,-25,-53,-54,58,58,58,58,58,-25,58,58,58,58,]),'EQ':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,59,-53,-52,-65,-66,-67,-68,59,59,-56,59,-26,59,59,59,-49,-55,59,-25,-53,-54,59,59,59,59,59,-25,59,59,59,59,]),'NE':([26,27,28,29,33,34,35,36,37,62,63,64,65,73,75,76,77,78,82,88,91,97,99,108,110,111,112,113,114,126,139,149,],[-25,60,-53,-52,-65,-66,-67,-68,60,60,-56,60,-26,60,60,60,-49,-55,60,-25,-53,-54,60,60,60,60,60,-25,60,60,60,60,]),'RSB':([26,28,29,33,34,35,36,37,63,64,65,69,75,76,77,78,97,],[-25,-53,-52,-65,-66,-67,-68,65,-56,-57,-26,93,-50,-51,-49,-55,-54,]),'SEMICOLON':([26,28,29,33,34,35,36,63,64,65,75,76,77,78,82,88,91,97,99,112,113,123,126,136,],[-25,-53,-52,-65,-66,-67,-68,-56,-57,-26,-50,-51,-49,-55,100,-25,-53,-54,109,120,-25,129,132,142,]),'IN':([113,],[121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'eps':([0,25,39,45,125,128,147,],[3,43,67,74,131,135,67,]),'dec':([2,],[5,]),'vardec':([2,66,118,122,127,140,144,150,151,],[6,84,84,84,84,84,84,84,84,]),'funcdec':([2,],[7,]),'idlist':([2,66,118,122,127,140,144,150,151,],[8,8,8,8,8,8,8,8,8,]),'iddec':([2,15,66,118,122,127,140,144,150,151,],[11,24,11,11,11,11,11,11,11,11,]),'lvalue':([2,15,17,18,30,31,32,45,46,47,61,66,81,98,101,102,103,104,118,120,122,127,132,140,144,146,150,151,],[12,12,28,28,28,28,28,28,28,28,28,91,28,28,28,28,28,28,91,28,91,91,28,91,91,28,91,91,]),'type':([14,68,94,106,],[20,92,107,116,]),'exp':([17,18,30,31,32,45,46,47,61,66,81,98,101,102,103,104,118,120,122,127,132,140,144,146,150,151,],[27,37,62,63,64,73,75,76,77,82,99,108,110,111,112,114,82,126,82,82,139,82,82,149,82,82,]),'const':([17,18,30,31,32,45,46,47,61,66,81,98,101,102,103,104,118,120,122,127,132,138,140,144,146,150,151,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,143,29,29,29,29,29,]),'block':([19,66,70,107,118,122,127,140,144,150,151,],[38,83,95,117,83,83,83,83,83,83,83,]),'paramdecs':([25,],[41,]),'paramdecslist':([25,],[42,]),'paramdec':([25,71,],[44,96,]),'operator':([27,37,62,63,64,73,75,76,77,82,99,108,110,111,112,114,126,139,149,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'relop':([27,37,62,63,64,73,75,76,77,82,99,108,110,111,112,114,126,139,149,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'stmtlist':([39,147,],[66,150,]),'explist':([45,],[72,]),'stmt':([66,118,122,127,140,144,150,151,],[80,124,128,133,145,148,80,152,]),'cases':([125,],[130,]),'elseiflist':([128,],[134,]),'case':([130,],[137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program','parser.py',15),
  ('declist -> declist dec','declist',2,'p_declist','parser.py',20),
  ('declist -> eps','declist',1,'p_declist','parser.py',21),
  ('dec -> vardec','dec',1,'p_dec','parser.py',27),
  ('dec -> funcdec','dec',1,'p_dec','parser.py',28),
  ('vardec -> idlist COLON type','vardec',3,'p_vardec','parser.py',33),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block','funcdec',8,'p_funcdec','parser.py',38),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB block','funcdec',6,'p_funcdec','parser.py',39),
  ('type -> INTEGER','type',1,'p_type','parser.py',44),
  ('type -> FLOAT','type',1,'p_type','parser.py',45),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',46),
  ('iddec -> lvalue','iddec',1,'p_iddec','parser.py',51),
  ('iddec -> ID ASSIGN exp','iddec',3,'p_iddec','parser.py',52),
  ('idlist -> iddec','idlist',1,'p_idlist','parser.py',58),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist','parser.py',59),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs','parser.py',65),
  ('paramdecs -> eps','paramdecs',1,'p_paramdecs','parser.py',66),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist','parser.py',71),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist','parser.py',72),
  ('paramdec -> ID COLON type','paramdec',3,'p_paramdec','parser.py',78),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec','parser.py',79),
  ('block -> LCB stmtlist RCB','block',3,'p_block','parser.py',84),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',89),
  ('stmtlist -> eps','stmtlist',1,'p_stmtlist','parser.py',90),
  ('lvalue -> ID','lvalue',1,'p_lvalue','parser.py',95),
  ('lvalue -> ID LSB exp RSB','lvalue',4,'p_lvalue','parser.py',96),
  ('case -> WHERE const COLON stmtlist','case',4,'p_case','parser.py',101),
  ('cases -> cases case','cases',2,'p_cases','parser.py',106),
  ('cases -> eps','cases',1,'p_cases','parser.py',107),
  ('stmt -> RETURN exp SEMICOLON','stmt',3,'p_stmt','parser.py',113),
  ('stmt -> exp SEMICOLON','stmt',2,'p_stmt','parser.py',114),
  ('stmt -> block','stmt',1,'p_stmt','parser.py',115),
  ('stmt -> vardec','stmt',1,'p_stmt','parser.py',116),
  ('stmt -> WHILE LRB exp LRB stmt','stmt',5,'p_stmt','parser.py',117),
  ('stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON','stmt',8,'p_stmt','parser.py',118),
  ('stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt','stmt',9,'p_stmt','parser.py',119),
  ('stmt -> FOR LRB ID IN RRB stmt','stmt',6,'p_stmt','parser.py',120),
  ('stmt -> IF LRB exp RRB stmt elseiflist','stmt',6,'p_stmt','parser.py',121),
  ('stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt','stmt',8,'p_stmt','parser.py',122),
  ('stmt -> PRINT LRB ID RRB SEMICOLON','stmt',5,'p_stmt','parser.py',123),
  ('elseiflist -> elseiflist ELSEIF LRB exp RRB stmt','elseiflist',6,'p_elseiflist','parser.py',128),
  ('elseiflist -> eps','elseiflist',1,'p_elseiflist','parser.py',129),
  ('relop -> GT','relop',1,'p_relop','parser.py',134),
  ('relop -> GE','relop',1,'p_relop','parser.py',135),
  ('relop -> LT','relop',1,'p_relop','parser.py',136),
  ('relop -> LE','relop',1,'p_relop','parser.py',137),
  ('relop -> EQ','relop',1,'p_relop','parser.py',138),
  ('relop -> NE','relop',1,'p_relop','parser.py',139),
  ('exp -> lvalue ASSIGN exp','exp',3,'p_exp','parser.py',144),
  ('exp -> exp operator exp','exp',3,'p_exp','parser.py',145),
  ('exp -> exp relop exp','exp',3,'p_exp','parser.py',146),
  ('exp -> const','exp',1,'p_exp','parser.py',147),
  ('exp -> lvalue','exp',1,'p_exp','parser.py',148),
  ('exp -> ID LRB explist RRB','exp',4,'p_exp','parser.py',149),
  ('exp -> LRB exp RRB','exp',3,'p_exp','parser.py',150),
  ('exp -> SUB exp','exp',2,'p_exp','parser.py',151),
  ('exp -> NOT exp','exp',2,'p_exp','parser.py',152),
  ('operator -> AND','operator',1,'p_operator','parser.py',157),
  ('operator -> OR','operator',1,'p_operator','parser.py',158),
  ('operator -> SUM','operator',1,'p_operator','parser.py',159),
  ('operator -> SUB','operator',1,'p_operator','parser.py',160),
  ('operator -> MUL','operator',1,'p_operator','parser.py',161),
  ('operator -> DIV','operator',1,'p_operator','parser.py',162),
  ('operator -> MOD','operator',1,'p_operator','parser.py',163),
  ('const -> INTEGERNUMBER','const',1,'p_const','parser.py',168),
  ('const -> FLOATNUMBER','const',1,'p_const','parser.py',169),
  ('const -> TRUE','const',1,'p_const','parser.py',170),
  ('const -> FALSE','const',1,'p_const','parser.py',171),
  ('explist -> exp','explist',1,'p_explist','parser.py',176),
  ('explist -> explist COMMA exp','explist',3,'p_explist','parser.py',177),
  ('explist -> eps','explist',1,'p_explist','parser.py',178),
  ('eps -> <empty>','eps',0,'p_eps','parser.py',183),
]
