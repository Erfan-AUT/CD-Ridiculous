
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftNOTleftLTLEGTGEEQNErightASSIGNleftSUMSUBleftMULDIVMODAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB blockdeclist : declist decdeclist : epsdec : vardec\n    | funcdecvardec : idlist COLON type SEMICOLONfuncdec : FUNCTION ID LRB paramdecs RRB COLON type block\n    | FUNCTION ID LRB paramdecs RRB blocktype : INTEGER\n    | FLOAT\n    | BOOLEANiddec : lvalue ASSIGN expiddec : lvalueidlist : idlist COMMA iddecidlist : iddecparamdecs : paramdecslist\n    | epsparamdecslist : paramdec\n    | paramdecslist COMMA paramdec\n    paramdec : ID LSB RSB COLON typeparamdec : ID COLON typeblock : LCB stmtlist RCBstmtlist : stmtlist stmt %prec MULstmtlist : epslvalue : ID LRB explist RRBlvalue : IDlvalue : ID LSB exp RSBcase : WHERE const COLON stmtlistcases : cases case\n    | eps\n    stmt : ostmt\n    | cstmtostmt : WHILE LRB exp RRB ostmtostmt : FOR LRB ID IN ID RRB ostmtostmt : FOR LRB exp SEMICOLON exp SEMICOLON exp RRB ostmtostmt : IF LRB exp RRB cstmt elseiflist ELSE ostmtostmt : IF LRB exp RRB cstmt\n    | IF LRB exp RRB ostmtcstmt : WHILE LRB exp RRB cstmt cstmt : FOR LRB ID IN ID RRB cstmtcstmt : FOR LRB exp SEMICOLON exp SEMICOLON exp RRB cstmtcstmt : IF LRB exp RRB cstmt elseiflist ELSE cstmtcstmt : simpleelseiflist : elseiflist ELSEIF LRB exp RRB cstmtelseiflist : epssimple : block\n    | vardecsimple :  ON LRB exp RRB LCB cases RCB SEMICOLONsimple : RETURN exp SEMICOLONsimple : exp SEMICOLONsimple : PRINT LRB ID RRB SEMICOLONrelop : GT\n    | GE\n    | LT\n    | LE\n    | EQ\n    | NEexp : exp relop exp %prec MULexp : lvalue %prec ORexp : SUB expexp : NOT expexp : LRB exp RRBexp : lvalue ASSIGN exp %prec ORexp : constexp : exp operator exp %prec MULoperator : AND\n    | OR\n    | SUM\n    | SUB\n    | MUL\n    | DIV\n    | MODconst : INTEGERNUMBER\n    | FLOATNUMBER\n    | TRUE\n    | FALSEexplist : exp\n    | explist COMMA exp\n    | epseps :'
    
_lr_action_items = {'MAIN':([0,2,3,5,6,7,43,82,100,121,],[-80,4,-3,-2,-4,-5,-6,-22,-8,-7,]),'FUNCTION':([0,2,3,5,6,7,43,82,100,121,],[-80,9,-3,-2,-4,-5,-6,-22,-8,-7,]),'ID':([0,2,3,5,6,7,9,15,17,18,19,26,27,32,33,42,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,76,82,83,84,85,90,91,92,94,100,102,103,104,105,106,108,109,117,121,122,123,124,125,128,129,133,134,138,139,140,141,144,145,148,149,152,160,161,162,163,164,165,166,167,168,170,171,172,176,178,179,180,181,182,188,189,190,191,196,197,198,199,203,204,207,208,],[-80,10,-3,-2,-4,-5,16,10,10,10,10,44,10,10,10,-80,-6,10,10,10,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,10,10,-24,44,-22,-23,-31,-32,-43,-46,-47,10,-8,10,-50,113,10,10,118,10,-49,-7,10,130,10,10,-33,-39,-37,-38,-51,10,10,10,10,155,-34,-40,10,10,10,-42,-36,10,10,174,10,-48,-35,-41,-37,-80,10,10,10,10,10,10,193,10,10,10,200,10,10,10,10,10,10,]),'$end':([1,41,82,],[0,-1,-22,]),'LRB':([4,10,16,17,18,19,27,32,33,42,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,82,83,84,85,86,88,89,90,91,92,93,94,95,102,103,104,105,106,109,113,117,122,124,125,128,129,132,133,134,135,136,138,139,140,141,144,145,148,149,152,153,155,160,161,162,163,164,165,167,168,170,171,172,176,178,179,180,181,182,184,185,186,188,189,190,191,193,196,198,199,203,204,207,208,],[13,17,26,27,27,27,27,27,27,-80,-6,27,27,27,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,27,27,-24,-22,-23,-31,-32,102,104,105,-43,-46,-47,106,27,108,27,-50,27,27,27,27,17,-49,27,27,27,-33,-39,141,-37,-38,144,145,-51,27,27,27,27,27,-34,-40,27,164,17,27,27,-42,-36,27,27,27,-48,-35,-41,-37,-80,27,27,27,27,27,188,189,190,27,27,27,27,17,27,27,27,27,27,27,27,]),'COLON':([8,10,11,12,25,31,34,35,36,37,38,40,44,50,68,69,70,75,77,79,80,81,96,97,119,169,],[14,-26,-15,-13,-14,-59,-64,-73,-74,-75,-76,-12,74,-25,-60,-61,-27,99,-62,-58,-65,-63,-13,110,-12,176,]),'COMMA':([8,10,11,12,17,22,23,24,25,28,29,30,31,34,35,36,37,38,40,46,48,50,68,69,70,77,78,79,80,81,96,98,101,119,120,],[15,-26,-15,-13,-80,-9,-10,-11,-14,51,-77,-79,-59,-64,-73,-74,-75,-76,-12,76,-18,-25,-60,-61,-27,-62,-78,-58,-65,-63,-13,-21,-19,-12,-20,]),'ASSIGN':([10,12,31,50,70,96,113,155,193,],[-26,19,67,-25,-27,109,-26,-26,-26,]),'GT':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,54,-59,-64,-73,-74,-75,-76,54,54,54,-25,-60,54,-27,-62,54,-58,-65,54,54,-59,54,54,-26,54,54,54,54,54,54,54,54,-26,54,54,54,54,54,-26,54,54,54,54,]),'GE':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,55,-59,-64,-73,-74,-75,-76,55,55,55,-25,-60,55,-27,-62,55,-58,-65,55,55,-59,55,55,-26,55,55,55,55,55,55,55,55,-26,55,55,55,55,55,-26,55,55,55,55,]),'LT':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,56,-59,-64,-73,-74,-75,-76,56,56,56,-25,-60,56,-27,-62,56,-58,-65,56,56,-59,56,56,-26,56,56,56,56,56,56,56,56,-26,56,56,56,56,56,-26,56,56,56,56,]),'LE':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,57,-59,-64,-73,-74,-75,-76,57,57,57,-25,-60,57,-27,-62,57,-58,-65,57,57,-59,57,57,-26,57,57,57,57,57,57,57,57,-26,57,57,57,57,57,-26,57,57,57,57,]),'EQ':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,58,-59,-64,-73,-74,-75,-76,58,58,58,-25,-60,58,-27,-62,58,-58,-65,58,58,-59,58,58,-26,58,58,58,58,58,58,58,58,-26,58,58,58,58,58,-26,58,58,58,58,]),'NE':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,59,-59,-64,-73,-74,-75,-76,59,59,59,-25,-60,59,-27,-62,59,-58,-65,59,59,-59,59,59,-26,59,59,59,59,59,59,59,59,-26,59,59,59,59,59,-26,59,59,59,59,]),'AND':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,60,-59,-64,-73,-74,-75,-76,60,60,60,-25,-60,-61,-27,-62,60,-58,-65,-63,60,-59,60,60,-26,60,60,60,-63,60,60,60,60,-26,60,60,60,60,60,-26,60,60,60,60,]),'OR':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,61,-59,-64,-73,-74,-75,-76,61,61,61,-25,-60,-61,-27,-62,61,-58,-65,-63,61,-59,61,61,-26,61,61,61,-63,61,61,61,61,-26,61,61,61,61,61,-26,61,61,61,61,]),'SUM':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,62,-59,-64,-73,-74,-75,-76,62,62,62,-25,-60,62,-27,-62,62,-58,-65,62,62,-59,62,62,-26,62,62,62,62,62,62,62,62,-26,62,62,62,62,62,-26,62,62,62,62,]),'SUB':([10,17,18,19,27,29,31,32,33,34,35,36,37,38,39,40,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,87,90,91,92,94,96,102,103,104,105,106,107,109,112,113,114,115,116,117,119,122,124,125,128,129,131,133,134,138,139,140,141,144,145,148,149,150,151,152,154,155,156,160,161,162,163,164,165,167,168,170,171,172,173,175,176,178,179,180,181,182,187,188,189,190,191,192,193,194,195,196,198,199,201,203,204,206,207,208,],[-26,32,32,32,32,63,-59,32,32,-64,-73,-74,-75,-76,63,63,-80,-6,63,-25,32,32,32,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,32,-60,63,-27,32,-24,-62,63,-58,-65,63,-22,-23,-31,-32,63,-43,-46,-47,32,-59,32,-50,32,32,32,63,32,63,-26,63,63,63,-49,63,32,32,32,-33,-39,63,-37,-38,-51,32,32,32,32,32,-34,-40,63,63,32,63,-26,63,32,32,-42,-36,32,32,32,-48,-35,-41,-37,63,63,-80,32,32,32,32,32,63,32,32,32,32,63,-26,63,63,32,32,32,63,32,32,63,32,32,]),'MUL':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,64,-59,-64,-73,-74,-75,-76,64,64,64,-25,64,64,-27,-62,64,-58,-65,64,64,-59,64,64,-26,64,64,64,64,64,64,64,64,-26,64,64,64,64,64,-26,64,64,64,64,]),'DIV':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,65,-59,-64,-73,-74,-75,-76,65,65,65,-25,65,65,-27,-62,65,-58,-65,65,65,-59,65,65,-26,65,65,65,65,65,65,65,65,-26,65,65,65,65,65,-26,65,65,65,65,]),'MOD':([10,29,31,34,35,36,37,38,39,40,49,50,68,69,70,77,78,79,80,81,87,96,107,112,113,114,115,116,119,131,150,151,154,155,156,173,175,187,192,193,194,195,201,206,],[-26,66,-59,-64,-73,-74,-75,-76,66,66,66,-25,66,66,-27,-62,66,-58,-65,66,66,-59,66,66,-26,66,66,66,66,66,66,66,66,-26,66,66,66,66,66,-26,66,66,66,66,]),'RRB':([10,13,17,22,23,24,26,28,29,30,31,34,35,36,37,38,45,46,47,48,49,50,68,69,70,77,78,79,80,81,98,101,112,115,116,118,120,130,150,151,154,173,174,187,192,195,200,206,],[-26,20,-80,-9,-10,-11,-80,50,-77,-79,-59,-64,-73,-74,-75,-76,75,-16,-17,-18,77,-25,-60,-61,-27,-62,-78,-58,-65,-63,-21,-19,122,125,126,127,-20,139,160,161,165,178,179,191,196,199,203,208,]),'RSB':([10,31,34,35,36,37,38,39,50,68,69,70,73,77,79,80,81,],[-26,-59,-64,-73,-74,-75,-76,70,-25,-60,-61,-27,97,-62,-58,-65,-63,]),'SEMICOLON':([10,21,22,23,24,31,34,35,36,37,38,50,68,69,70,77,79,80,81,87,96,107,113,114,119,127,131,155,156,157,175,193,194,201,],[-26,43,-9,-10,-11,-59,-64,-73,-74,-75,-76,-25,-60,-61,-27,-62,-58,-65,-63,103,-59,117,-26,124,-63,138,140,-26,167,168,180,-26,198,204,]),'LSB':([10,44,113,155,193,],[18,73,18,18,18,]),'INTEGER':([14,74,99,110,],[22,22,22,22,]),'FLOAT':([14,74,99,110,],[23,23,23,23,]),'BOOLEAN':([14,74,99,110,],[24,24,24,24,]),'NOT':([17,18,19,27,32,33,42,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,82,83,84,85,90,91,92,94,102,103,104,105,106,109,117,122,124,125,128,129,133,134,138,139,140,141,144,145,148,149,152,160,161,162,163,164,165,167,168,170,171,172,176,178,179,180,181,182,188,189,190,191,196,198,199,203,204,207,208,],[33,33,33,33,33,33,-80,-6,33,33,33,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,33,33,-24,-22,-23,-31,-32,-43,-46,-47,33,33,-50,33,33,33,33,-49,33,33,33,-33,-39,-37,-38,-51,33,33,33,33,33,-34,-40,33,33,33,-42,-36,33,33,33,-48,-35,-41,-37,-80,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'INTEGERNUMBER':([17,18,19,27,32,33,42,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,82,83,84,85,90,91,92,94,102,103,104,105,106,109,117,122,124,125,128,129,133,134,138,139,140,141,144,145,148,149,152,159,160,161,162,163,164,165,167,168,170,171,172,176,178,179,180,181,182,188,189,190,191,196,198,199,203,204,207,208,],[35,35,35,35,35,35,-80,-6,35,35,35,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,35,35,-24,-22,-23,-31,-32,-43,-46,-47,35,35,-50,35,35,35,35,-49,35,35,35,-33,-39,-37,-38,-51,35,35,35,35,35,-34,-40,35,35,35,35,-42,-36,35,35,35,-48,-35,-41,-37,-80,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FLOATNUMBER':([17,18,19,27,32,33,42,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,82,83,84,85,90,91,92,94,102,103,104,105,106,109,117,122,124,125,128,129,133,134,138,139,140,141,144,145,148,149,152,159,160,161,162,163,164,165,167,168,170,171,172,176,178,179,180,181,182,188,189,190,191,196,198,199,203,204,207,208,],[36,36,36,36,36,36,-80,-6,36,36,36,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,36,36,-24,-22,-23,-31,-32,-43,-46,-47,36,36,-50,36,36,36,36,-49,36,36,36,-33,-39,-37,-38,-51,36,36,36,36,36,-34,-40,36,36,36,36,-42,-36,36,36,36,-48,-35,-41,-37,-80,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TRUE':([17,18,19,27,32,33,42,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,82,83,84,85,90,91,92,94,102,103,104,105,106,109,117,122,124,125,128,129,133,134,138,139,140,141,144,145,148,149,152,159,160,161,162,163,164,165,167,168,170,171,172,176,178,179,180,181,182,188,189,190,191,196,198,199,203,204,207,208,],[37,37,37,37,37,37,-80,-6,37,37,37,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,37,37,-24,-22,-23,-31,-32,-43,-46,-47,37,37,-50,37,37,37,37,-49,37,37,37,-33,-39,-37,-38,-51,37,37,37,37,37,-34,-40,37,37,37,37,-42,-36,37,37,37,-48,-35,-41,-37,-80,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'FALSE':([17,18,19,27,32,33,42,43,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,82,83,84,85,90,91,92,94,102,103,104,105,106,109,117,122,124,125,128,129,133,134,138,139,140,141,144,145,148,149,152,159,160,161,162,163,164,165,167,168,170,171,172,176,178,179,180,181,182,188,189,190,191,196,198,199,203,204,207,208,],[38,38,38,38,38,38,-80,-6,38,38,38,-52,-53,-54,-55,-56,-57,-66,-67,-68,-69,-70,-71,-72,38,38,-24,-22,-23,-31,-32,-43,-46,-47,38,38,-50,38,38,38,38,-49,38,38,38,-33,-39,-37,-38,-51,38,38,38,38,38,-34,-40,38,38,38,38,-42,-36,38,38,38,-48,-35,-41,-37,-80,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LCB':([20,22,23,24,42,43,71,72,75,82,83,84,85,90,91,92,103,111,117,122,125,126,128,129,133,134,138,139,148,149,152,160,161,162,163,165,168,170,171,172,176,178,179,181,182,191,196,199,203,207,208,],[42,-9,-10,-11,-80,-6,42,-24,42,-22,-23,-31,-32,-43,-46,-47,-50,42,-49,42,42,137,-33,-39,-37,-38,-51,42,-34,-40,42,42,42,-42,-36,42,-48,-35,-41,-37,-80,42,42,42,42,42,42,42,42,42,42,]),'RCB':([42,43,71,72,82,83,84,85,90,91,92,103,117,128,129,133,134,137,138,146,147,148,149,158,162,163,168,170,171,172,176,181,],[-80,-6,82,-24,-22,-23,-31,-32,-43,-46,-47,-50,-49,-33,-39,-37,-38,-80,-51,157,-30,-34,-40,-29,-42,-36,-48,-35,-41,-37,-80,-28,]),'WHILE':([42,43,71,72,82,83,84,85,90,91,92,103,117,122,125,128,129,133,134,138,139,148,149,152,160,161,162,163,165,168,170,171,172,176,178,179,181,182,191,196,199,203,207,208,],[-80,-6,86,-24,-22,-23,-31,-32,-43,-46,-47,-50,-49,86,135,-33,-39,-37,-38,-51,86,-34,-40,86,86,135,-42,-36,135,-48,-35,-41,-37,-80,184,135,86,135,135,184,184,184,184,184,]),'FOR':([42,43,71,72,82,83,84,85,90,91,92,103,117,122,125,128,129,133,134,138,139,148,149,152,160,161,162,163,165,168,170,171,172,176,178,179,181,182,191,196,199,203,207,208,],[-80,-6,88,-24,-22,-23,-31,-32,-43,-46,-47,-50,-49,88,136,-33,-39,-37,-38,-51,88,-34,-40,88,88,136,-42,-36,136,-48,-35,-41,-37,-80,185,136,88,136,136,185,185,185,185,185,]),'IF':([42,43,71,72,82,83,84,85,90,91,92,103,117,122,125,128,129,133,134,138,139,148,149,152,160,161,162,163,165,168,170,171,172,176,178,179,181,182,191,196,199,203,207,208,],[-80,-6,89,-24,-22,-23,-31,-32,-43,-46,-47,-50,-49,89,132,-33,-39,-37,-38,-51,89,-34,-40,89,89,132,-42,-36,132,-48,-35,-41,-37,-80,186,132,89,132,132,186,186,186,186,186,]),'ON':([42,43,71,72,82,83,84,85,90,91,92,103,117,122,125,128,129,133,134,138,139,148,149,152,160,161,162,163,165,168,170,171,172,176,178,179,181,182,191,196,199,203,207,208,],[-80,-6,93,-24,-22,-23,-31,-32,-43,-46,-47,-50,-49,93,93,-33,-39,-37,-38,-51,93,-34,-40,93,93,93,-42,-36,93,-48,-35,-41,-37,-80,93,93,93,93,93,93,93,93,93,93,]),'RETURN':([42,43,71,72,82,83,84,85,90,91,92,103,117,122,125,128,129,133,134,138,139,148,149,152,160,161,162,163,165,168,170,171,172,176,178,179,181,182,191,196,199,203,207,208,],[-80,-6,94,-24,-22,-23,-31,-32,-43,-46,-47,-50,-49,94,94,-33,-39,-37,-38,-51,94,-34,-40,94,94,94,-42,-36,94,-48,-35,-41,-37,-80,94,94,94,94,94,94,94,94,94,94,]),'PRINT':([42,43,71,72,82,83,84,85,90,91,92,103,117,122,125,128,129,133,134,138,139,148,149,152,160,161,162,163,165,168,170,171,172,176,178,179,181,182,191,196,199,203,207,208,],[-80,-6,95,-24,-22,-23,-31,-32,-43,-46,-47,-50,-49,95,95,-33,-39,-37,-38,-51,95,-34,-40,95,95,95,-42,-36,95,-48,-35,-41,-37,-80,95,95,95,95,95,95,95,95,95,95,]),'ELSE':([43,82,90,91,92,103,117,129,133,138,142,143,149,162,168,171,172,177,183,202,205,],[-6,-22,-43,-46,-47,-50,-49,-39,-80,-51,152,-45,-40,-42,-48,-41,-80,182,-44,-80,207,]),'ELSEIF':([43,82,90,91,92,103,117,129,133,138,142,143,149,162,168,171,172,177,183,202,205,],[-6,-22,-43,-46,-47,-50,-49,-39,-80,-51,153,-45,-40,-42,-48,-41,-80,153,-44,-80,153,]),'WHERE':([43,72,82,83,84,85,90,91,92,103,117,128,129,133,134,137,138,146,147,148,149,158,162,163,168,170,171,172,176,181,],[-6,-24,-22,-23,-31,-32,-43,-46,-47,-50,-49,-33,-39,-37,-38,-80,-51,159,-30,-34,-40,-29,-42,-36,-48,-35,-41,-37,-80,-28,]),'IN':([113,155,193,],[123,166,197,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'eps':([0,17,26,42,133,137,172,176,202,],[3,30,47,72,143,147,143,72,143,]),'dec':([2,],[5,]),'vardec':([2,71,122,125,139,152,160,161,165,178,179,181,182,191,196,199,203,207,208,],[6,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'funcdec':([2,],[7,]),'idlist':([2,71,122,125,139,152,160,161,165,178,179,181,182,191,196,199,203,207,208,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'iddec':([2,15,71,122,125,139,152,160,161,165,178,179,181,182,191,196,199,203,207,208,],[11,25,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'lvalue':([2,15,17,18,19,27,32,33,51,52,53,67,71,94,102,104,105,106,109,122,124,125,139,140,141,144,145,152,160,161,164,165,167,178,179,180,181,182,188,189,190,191,196,198,199,203,204,207,208,],[12,12,31,31,31,31,31,31,31,31,31,31,96,31,31,31,31,31,31,96,31,96,96,31,31,31,31,96,96,96,31,96,31,96,96,31,96,96,31,31,31,96,96,31,96,96,31,96,96,]),'type':([14,74,99,110,],[21,98,111,120,]),'explist':([17,],[28,]),'exp':([17,18,19,27,32,33,51,52,53,67,71,94,102,104,105,106,109,122,124,125,139,140,141,144,145,152,160,161,164,165,167,178,179,180,181,182,188,189,190,191,196,198,199,203,204,207,208,],[29,39,40,49,68,69,78,79,80,81,87,107,112,114,115,116,119,87,131,87,87,150,151,154,156,87,87,87,173,87,175,87,87,187,87,87,192,194,195,87,87,201,87,87,206,87,87,]),'const':([17,18,19,27,32,33,51,52,53,67,71,94,102,104,105,106,109,122,124,125,139,140,141,144,145,152,159,160,161,164,165,167,178,179,180,181,182,188,189,190,191,196,198,199,203,204,207,208,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,169,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'block':([20,71,75,111,122,125,139,152,160,161,165,178,179,181,182,191,196,199,203,207,208,],[41,91,100,121,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'paramdecs':([26,],[45,]),'paramdecslist':([26,],[46,]),'paramdec':([26,76,],[48,101,]),'relop':([29,39,40,49,68,69,78,79,80,81,87,107,112,114,115,116,119,131,150,151,154,156,173,175,187,192,194,195,201,206,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'operator':([29,39,40,49,68,69,78,79,80,81,87,107,112,114,115,116,119,131,150,151,154,156,173,175,187,192,194,195,201,206,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'stmtlist':([42,176,],[71,181,]),'stmt':([71,181,],[83,83,]),'ostmt':([71,122,125,139,152,160,161,165,179,181,182,191,],[84,128,134,148,163,170,134,128,148,84,163,170,]),'cstmt':([71,122,125,139,152,160,161,165,178,179,181,182,191,196,199,203,207,208,],[85,129,133,149,162,171,172,129,183,149,85,162,171,129,202,149,162,171,]),'simple':([71,122,125,139,152,160,161,165,178,179,181,182,191,196,199,203,207,208,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'elseiflist':([133,172,202,],[142,177,205,]),'cases':([137,],[146,]),'case':([146,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program','parser.py',24),
  ('declist -> declist dec','declist',2,'p_declist_mult','parser.py',41),
  ('declist -> eps','declist',1,'p_declist','parser.py',54),
  ('dec -> vardec','dec',1,'p_dec','parser.py',61),
  ('dec -> funcdec','dec',1,'p_dec','parser.py',62),
  ('vardec -> idlist COLON type SEMICOLON','vardec',4,'p_vardec','parser.py',69),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block','funcdec',8,'p_funcdec','parser.py',85),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB block','funcdec',6,'p_funcdec','parser.py',86),
  ('type -> INTEGER','type',1,'p_type','parser.py',93),
  ('type -> FLOAT','type',1,'p_type','parser.py',94),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',95),
  ('iddec -> lvalue ASSIGN exp','iddec',3,'p_iddec','parser.py',103),
  ('iddec -> lvalue','iddec',1,'p_iddec_single','parser.py',114),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist','parser.py',122),
  ('idlist -> iddec','idlist',1,'p_idlist_single','parser.py',135),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs','parser.py',143),
  ('paramdecs -> eps','paramdecs',1,'p_paramdecs','parser.py',144),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist','parser.py',151),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist','parser.py',152),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec','parser.py',160),
  ('paramdec -> ID COLON type','paramdec',3,'p_paramdec_single','parser.py',167),
  ('block -> LCB stmtlist RCB','block',3,'p_block','parser.py',174),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',183),
  ('stmtlist -> eps','stmtlist',1,'p_stmtlist_eps','parser.py',195),
  ('lvalue -> ID LRB explist RRB','lvalue',4,'p_lvalue_call','parser.py',203),
  ('lvalue -> ID','lvalue',1,'p_lvalue_single','parser.py',210),
  ('lvalue -> ID LSB exp RSB','lvalue',4,'p_lvalue_array','parser.py',220),
  ('case -> WHERE const COLON stmtlist','case',4,'p_case','parser.py',230),
  ('cases -> cases case','cases',2,'p_cases','parser.py',237),
  ('cases -> eps','cases',1,'p_cases','parser.py',238),
  ('stmt -> ostmt','stmt',1,'p_stmt','parser.py',245),
  ('stmt -> cstmt','stmt',1,'p_stmt','parser.py',246),
  ('ostmt -> WHILE LRB exp RRB ostmt','ostmt',5,'p_ostmt_while','parser.py',254),
  ('ostmt -> FOR LRB ID IN ID RRB ostmt','ostmt',7,'p_ostmt_pfor','parser.py',261),
  ('ostmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB ostmt','ostmt',9,'p_ostmt_cfor','parser.py',269),
  ('ostmt -> IF LRB exp RRB cstmt elseiflist ELSE ostmt','ostmt',8,'p_ostmt_ifelse','parser.py',278),
  ('ostmt -> IF LRB exp RRB cstmt','ostmt',5,'p_ostmt_if','parser.py',286),
  ('ostmt -> IF LRB exp RRB ostmt','ostmt',5,'p_ostmt_if','parser.py',287),
  ('cstmt -> WHILE LRB exp RRB cstmt','cstmt',5,'p_cstmt_while','parser.py',295),
  ('cstmt -> FOR LRB ID IN ID RRB cstmt','cstmt',7,'p_cstmt_pfor','parser.py',302),
  ('cstmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB cstmt','cstmt',9,'p_cstmt_cfor','parser.py',310),
  ('cstmt -> IF LRB exp RRB cstmt elseiflist ELSE cstmt','cstmt',8,'p_cstmt_ifelse','parser.py',318),
  ('cstmt -> simple','cstmt',1,'p_cstmt_simple','parser.py',326),
  ('elseiflist -> elseiflist ELSEIF LRB exp RRB cstmt','elseiflist',6,'p_elseiflist','parser.py',334),
  ('elseiflist -> eps','elseiflist',1,'p_elseiflist_eps','parser.py',343),
  ('simple -> block','simple',1,'p_simple','parser.py',351),
  ('simple -> vardec','simple',1,'p_simple','parser.py',352),
  ('simple -> ON LRB exp RRB LCB cases RCB SEMICOLON','simple',8,'p_simple_switch','parser.py',360),
  ('simple -> RETURN exp SEMICOLON','simple',3,'p_simple_return','parser.py',369),
  ('simple -> exp SEMICOLON','simple',2,'p_simple_semicolon','parser.py',377),
  ('simple -> PRINT LRB ID RRB SEMICOLON','simple',5,'p_print','parser.py',384),
  ('relop -> GT','relop',1,'p_relop','parser.py',395),
  ('relop -> GE','relop',1,'p_relop','parser.py',396),
  ('relop -> LT','relop',1,'p_relop','parser.py',397),
  ('relop -> LE','relop',1,'p_relop','parser.py',398),
  ('relop -> EQ','relop',1,'p_relop','parser.py',399),
  ('relop -> NE','relop',1,'p_relop','parser.py',400),
  ('exp -> exp relop exp','exp',3,'p_exp_relop','parser.py',408),
  ('exp -> lvalue','exp',1,'p_exp_lvalue','parser.py',416),
  ('exp -> SUB exp','exp',2,'p_exp_minus','parser.py',425),
  ('exp -> NOT exp','exp',2,'p_exp_not','parser.py',435),
  ('exp -> LRB exp RRB','exp',3,'p_exp_rbracket','parser.py',445),
  ('exp -> lvalue ASSIGN exp','exp',3,'p_exp_lvalue_assign','parser.py',460),
  ('exp -> const','exp',1,'p_exp_const','parser.py',476),
  ('exp -> exp operator exp','exp',3,'p_exp_binop','parser.py',484),
  ('operator -> AND','operator',1,'p_operator','parser.py',492),
  ('operator -> OR','operator',1,'p_operator','parser.py',493),
  ('operator -> SUM','operator',1,'p_operator','parser.py',494),
  ('operator -> SUB','operator',1,'p_operator','parser.py',495),
  ('operator -> MUL','operator',1,'p_operator','parser.py',496),
  ('operator -> DIV','operator',1,'p_operator','parser.py',497),
  ('operator -> MOD','operator',1,'p_operator','parser.py',498),
  ('const -> INTEGERNUMBER','const',1,'p_const','parser.py',510),
  ('const -> FLOATNUMBER','const',1,'p_const','parser.py',511),
  ('const -> TRUE','const',1,'p_const','parser.py',512),
  ('const -> FALSE','const',1,'p_const','parser.py',513),
  ('explist -> exp','explist',1,'p_explist','parser.py',532),
  ('explist -> explist COMMA exp','explist',3,'p_explist','parser.py',533),
  ('explist -> eps','explist',1,'p_explist','parser.py',534),
  ('eps -> <empty>','eps',0,'p_eps','parser.py',541),
]
