
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftNOTleftLTLEGTGEEQNErightASSIGNleftSUMSUBleftMULDIVMODAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB blockdeclist : declist dec\n    | epsdec : vardec\n    | funcdecvardec : idlist COLON type SEMICOLONfuncdec : FUNCTION ID LRB paramdecs RRB COLON type block\n    | FUNCTION ID LRB paramdecs RRB blocktype : INTEGER\n    | FLOAT\n    | BOOLEANiddec : lvalue\n    | lvalue ASSIGN exp\n    idlist : iddec\n    | idlist COMMA iddec\n    paramdecs : paramdecslist\n    | epsparamdecslist : paramdec\n    | paramdecslist COMMA paramdec\n    paramdec : ID COLON type\n    | ID LSB RSB COLON typeblock : LCB stmtlist RCBstmtlist : stmtlist stmt\n    | epslvalue : ID\n    | ID LSB exp RSB\n    | ID LRB explist RRBcase : WHERE const COLON stmtlistcases : cases case\n    | eps\n    stmt : ostmt\n    | cstmtostmt : IF LRB exp RRB simple\n    | IF LRB exp RRB ostmt\n    | IF LRB exp RRB cstmt elseiflist ELSE ostmt\n    | FOR LRB exp SEMICOLON exp SEMICOLON exp RRB ostmt\n    | FOR LRB ID IN ID RRB ostmt\n    | WHILE LRB exp RRB ostmt\n    cstmt : simple\n    | IF LRB exp RRB cstmt elseiflist ELSE cstmt\n    | FOR LRB exp SEMICOLON exp SEMICOLON exp RRB cstmt\n    | FOR LRB ID IN ID RRB cstmt\n    | WHILE LRB exp RRB cstmt\n    elseiflist : elseiflist ELSEIF LRB exp RRB cstmt\n    | epssimple : RETURN exp SEMICOLON\n    | exp SEMICOLON\n    | block\n    | vardec\n    | ON LRB exp RRB LCB cases RCB SEMICOLON\n    | PRINT LRB ID RRB SEMICOLONrelop : GT\n    | GE\n    | LT\n    | LE\n    | EQ\n    | NEexp : lvalue ASSIGN exp\n    | exp operator exp %prec AND\n    | exp relop exp %prec LT\n    | const\n    | lvalue %prec OR\n    | LRB exp RRB\n    | SUB exp\n    | NOT expoperator : AND\n    | OR\n    | SUM\n    | SUB\n    | MUL\n    | DIV\n    | MODconst : INTEGERNUMBER\n    | FLOATNUMBER\n    | TRUE\n    | FALSEexplist : exp\n    | explist COMMA exp\n    | epseps :'
    
_lr_action_items = {'MAIN':([0,2,3,5,6,7,43,82,100,121,],[-80,4,-3,-2,-4,-5,-6,-22,-8,-7,]),'FUNCTION':([0,2,3,5,6,7,43,82,100,121,],[-80,9,-3,-2,-4,-5,-6,-22,-8,-7,]),'ID':([0,2,3,5,6,7,9,15,17,18,19,26,30,31,32,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,76,82,83,84,85,88,91,92,93,100,102,103,104,105,107,108,109,116,121,122,123,124,125,128,129,133,134,136,139,140,143,146,147,151,152,153,154,155,158,159,160,161,162,167,168,169,174,175,176,177,182,183,184,186,],[-80,10,-3,-2,-4,-5,16,10,10,10,10,44,10,10,10,-80,-6,10,10,-66,-67,-68,-69,-70,-71,-72,-52,-53,-54,-55,-56,-57,10,10,10,-24,44,-22,-23,-31,-32,-39,10,-48,-49,-8,10,-47,114,10,10,118,10,-46,-7,10,10,132,10,-33,-34,-38,-43,-51,10,10,10,-37,-42,-40,-35,10,10,-50,-36,-41,-80,10,10,10,172,10,10,10,180,10,10,10,10,10,]),'$end':([1,41,82,],[0,-1,-22,]),'LRB':([4,10,16,17,18,19,30,31,32,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,86,88,89,90,91,92,93,94,95,102,103,104,105,107,109,114,116,122,123,125,128,129,133,134,136,139,140,143,144,146,147,151,152,153,154,155,158,159,160,161,162,164,165,166,167,168,169,172,174,175,177,182,183,184,186,],[13,18,26,30,30,30,30,30,30,-80,-6,30,30,-66,-67,-68,-69,-70,-71,-72,-52,-53,-54,-55,-56,-57,30,30,30,-24,-22,-23,-31,-32,102,-39,104,105,30,-48,-49,107,108,30,-47,30,30,30,30,18,-46,30,30,30,-33,-34,-38,-43,-51,30,30,30,153,-37,-42,-40,-35,30,30,-50,-36,-41,-80,30,30,167,168,169,30,30,30,18,30,30,30,30,30,30,30,]),'COLON':([8,10,11,12,25,28,29,33,34,35,36,40,44,49,67,68,69,75,77,78,79,80,96,98,119,156,],[14,-25,-14,-12,-15,-62,-61,-73,-74,-75,-76,-13,73,-26,-64,-65,-27,99,-59,-60,-58,-63,-12,110,-13,160,]),'COMMA':([8,10,11,12,18,22,23,24,25,28,29,33,34,35,36,37,38,39,40,46,48,49,67,68,69,77,78,79,80,81,96,97,101,119,120,],[15,-25,-14,-12,-80,-9,-10,-11,-15,-62,-61,-73,-74,-75,-76,70,-77,-79,-13,76,-18,-26,-64,-65,-27,-59,-60,-58,-63,-78,-12,-20,-19,-13,-21,]),'ASSIGN':([10,12,28,49,69,96,114,172,],[-25,19,65,-26,-27,109,-25,-25,]),'RSB':([10,27,28,29,33,34,35,36,49,67,68,69,74,77,78,79,80,],[-25,49,-62,-61,-73,-74,-75,-76,-26,-64,-65,-27,98,-59,-60,-58,-63,]),'AND':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,52,-62,-61,-73,-74,-75,-76,52,52,-26,52,-64,-65,-27,-59,-60,-58,-63,52,52,-62,52,52,52,-25,52,52,-58,52,52,52,52,52,-25,52,52,52,]),'OR':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,53,-62,-61,-73,-74,-75,-76,53,53,-26,53,-64,-65,-27,-59,-60,-58,-63,53,53,-62,53,53,53,-25,53,53,-58,53,53,53,53,53,-25,53,53,53,]),'SUM':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,54,-62,-61,-73,-74,-75,-76,54,54,-26,54,-64,54,-27,54,54,54,-63,54,54,-62,54,54,54,-25,54,54,54,54,54,54,54,54,-25,54,54,54,]),'SUB':([10,17,18,19,27,28,29,30,31,32,33,34,35,36,38,40,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,78,79,80,81,82,83,84,85,87,88,91,92,93,96,102,103,104,105,106,107,109,112,113,114,115,116,117,119,122,123,125,128,129,131,133,134,136,139,140,143,145,146,147,151,152,153,154,155,157,158,159,160,161,162,167,168,169,170,171,172,173,174,175,177,179,182,183,184,185,186,],[-25,31,31,31,55,-62,-61,31,31,31,-73,-74,-75,-76,55,55,-80,-6,-26,31,31,-66,-67,-68,-69,-70,-71,-72,-52,-53,-54,-55,-56,-57,31,55,-64,55,-27,31,31,-24,55,55,55,-63,55,-22,-23,-31,-32,55,-39,31,-48,-49,-62,31,-47,31,31,55,31,31,55,55,-25,55,-46,55,55,31,31,31,-33,-34,55,-38,-43,-51,31,31,31,55,-37,-42,-40,-35,31,31,-50,55,-36,-41,-80,31,31,31,31,31,55,55,-25,55,31,31,31,55,31,31,31,55,31,]),'MUL':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,56,-62,-61,-73,-74,-75,-76,56,56,-26,56,56,56,-27,56,56,56,-63,56,56,-62,56,56,56,-25,56,56,56,56,56,56,56,56,-25,56,56,56,]),'DIV':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,57,-62,-61,-73,-74,-75,-76,57,57,-26,57,57,57,-27,57,57,57,-63,57,57,-62,57,57,57,-25,57,57,57,57,57,57,57,57,-25,57,57,57,]),'MOD':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,58,-62,-61,-73,-74,-75,-76,58,58,-26,58,58,58,-27,58,58,58,-63,58,58,-62,58,58,58,-25,58,58,58,58,58,58,58,58,-25,58,58,58,]),'GT':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,59,-62,-61,-73,-74,-75,-76,59,59,-26,59,-64,59,-27,59,-60,-58,-63,59,59,-62,59,59,59,-25,59,59,-58,59,59,59,59,59,-25,59,59,59,]),'GE':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,60,-62,-61,-73,-74,-75,-76,60,60,-26,60,-64,60,-27,60,-60,-58,-63,60,60,-62,60,60,60,-25,60,60,-58,60,60,60,60,60,-25,60,60,60,]),'LT':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,61,-62,-61,-73,-74,-75,-76,61,61,-26,61,-64,61,-27,61,-60,-58,-63,61,61,-62,61,61,61,-25,61,61,-58,61,61,61,61,61,-25,61,61,61,]),'LE':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,62,-62,-61,-73,-74,-75,-76,62,62,-26,62,-64,62,-27,62,-60,-58,-63,62,62,-62,62,62,62,-25,62,62,-58,62,62,62,62,62,-25,62,62,62,]),'EQ':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,63,-62,-61,-73,-74,-75,-76,63,63,-26,63,-64,63,-27,63,-60,-58,-63,63,63,-62,63,63,63,-25,63,63,-58,63,63,63,63,63,-25,63,63,63,]),'NE':([10,27,28,29,33,34,35,36,38,40,49,66,67,68,69,77,78,79,80,81,87,96,106,112,113,114,115,117,119,131,145,157,170,171,172,173,179,185,],[-25,64,-62,-61,-73,-74,-75,-76,64,64,-26,64,-64,64,-27,64,-60,-58,-63,64,64,-62,64,64,64,-25,64,64,-58,64,64,64,64,64,-25,64,64,64,]),'RRB':([10,13,18,22,23,24,26,28,29,33,34,35,36,37,38,39,45,46,47,48,49,66,67,68,69,77,78,79,80,81,97,101,112,115,117,118,120,132,145,157,170,173,180,185,],[-25,20,-80,-9,-10,-11,-80,-62,-61,-73,-74,-75,-76,69,-77,-79,75,-16,-17,-18,-26,80,-64,-65,-27,-59,-60,-58,-63,-78,-20,-19,122,125,126,127,-21,140,154,161,174,177,183,186,]),'SEMICOLON':([10,21,22,23,24,28,29,33,34,35,36,49,67,68,69,77,78,79,80,87,96,106,113,114,119,127,131,148,171,172,179,],[-25,43,-9,-10,-11,-62,-61,-73,-74,-75,-76,-26,-64,-65,-27,-59,-60,-58,-63,103,-62,116,123,-25,-58,136,139,155,175,-25,182,]),'LSB':([10,44,114,172,],[17,74,17,17,]),'INTEGER':([14,73,99,110,],[22,22,22,22,]),'FLOAT':([14,73,99,110,],[23,23,23,23,]),'BOOLEAN':([14,73,99,110,],[24,24,24,24,]),'NOT':([17,18,19,30,31,32,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,88,91,92,93,102,103,104,105,107,109,116,122,123,125,128,129,133,134,136,139,140,143,146,147,151,152,153,154,155,158,159,160,161,162,167,168,169,174,175,177,182,183,184,186,],[32,32,32,32,32,32,-80,-6,32,32,-66,-67,-68,-69,-70,-71,-72,-52,-53,-54,-55,-56,-57,32,32,32,-24,-22,-23,-31,-32,-39,32,-48,-49,32,-47,32,32,32,32,-46,32,32,32,-33,-34,-38,-43,-51,32,32,32,-37,-42,-40,-35,32,32,-50,-36,-41,-80,32,32,32,32,32,32,32,32,32,32,32,32,]),'INTEGERNUMBER':([17,18,19,30,31,32,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,88,91,92,93,102,103,104,105,107,109,116,122,123,125,128,129,133,134,136,139,140,143,146,147,150,151,152,153,154,155,158,159,160,161,162,167,168,169,174,175,177,182,183,184,186,],[33,33,33,33,33,33,-80,-6,33,33,-66,-67,-68,-69,-70,-71,-72,-52,-53,-54,-55,-56,-57,33,33,33,-24,-22,-23,-31,-32,-39,33,-48,-49,33,-47,33,33,33,33,-46,33,33,33,-33,-34,-38,-43,-51,33,33,33,-37,-42,33,-40,-35,33,33,-50,-36,-41,-80,33,33,33,33,33,33,33,33,33,33,33,33,]),'FLOATNUMBER':([17,18,19,30,31,32,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,88,91,92,93,102,103,104,105,107,109,116,122,123,125,128,129,133,134,136,139,140,143,146,147,150,151,152,153,154,155,158,159,160,161,162,167,168,169,174,175,177,182,183,184,186,],[34,34,34,34,34,34,-80,-6,34,34,-66,-67,-68,-69,-70,-71,-72,-52,-53,-54,-55,-56,-57,34,34,34,-24,-22,-23,-31,-32,-39,34,-48,-49,34,-47,34,34,34,34,-46,34,34,34,-33,-34,-38,-43,-51,34,34,34,-37,-42,34,-40,-35,34,34,-50,-36,-41,-80,34,34,34,34,34,34,34,34,34,34,34,34,]),'TRUE':([17,18,19,30,31,32,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,88,91,92,93,102,103,104,105,107,109,116,122,123,125,128,129,133,134,136,139,140,143,146,147,150,151,152,153,154,155,158,159,160,161,162,167,168,169,174,175,177,182,183,184,186,],[35,35,35,35,35,35,-80,-6,35,35,-66,-67,-68,-69,-70,-71,-72,-52,-53,-54,-55,-56,-57,35,35,35,-24,-22,-23,-31,-32,-39,35,-48,-49,35,-47,35,35,35,35,-46,35,35,35,-33,-34,-38,-43,-51,35,35,35,-37,-42,35,-40,-35,35,35,-50,-36,-41,-80,35,35,35,35,35,35,35,35,35,35,35,35,]),'FALSE':([17,18,19,30,31,32,42,43,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,72,82,83,84,85,88,91,92,93,102,103,104,105,107,109,116,122,123,125,128,129,133,134,136,139,140,143,146,147,150,151,152,153,154,155,158,159,160,161,162,167,168,169,174,175,177,182,183,184,186,],[36,36,36,36,36,36,-80,-6,36,36,-66,-67,-68,-69,-70,-71,-72,-52,-53,-54,-55,-56,-57,36,36,36,-24,-22,-23,-31,-32,-39,36,-48,-49,36,-47,36,36,36,36,-46,36,36,36,-33,-34,-38,-43,-51,36,36,36,-37,-42,36,-40,-35,36,36,-50,-36,-41,-80,36,36,36,36,36,36,36,36,36,36,36,36,]),'LCB':([20,22,23,24,42,43,71,72,75,82,83,84,85,88,92,93,103,111,116,122,125,126,128,129,133,134,136,140,143,146,147,151,152,154,155,158,159,160,161,162,174,177,183,184,186,],[42,-9,-10,-11,-80,-6,42,-24,42,-22,-23,-31,-32,-39,-48,-49,-47,42,-46,42,42,135,-33,-34,-38,-43,-51,42,42,-37,-42,-40,-35,42,-50,-36,-41,-80,42,42,42,42,42,42,42,]),'RCB':([42,43,71,72,82,83,84,85,88,92,93,103,116,128,129,133,134,135,136,141,142,146,147,149,151,152,155,158,159,160,162,],[-80,-6,82,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,-33,-34,-38,-43,-80,-51,148,-30,-37,-42,-29,-40,-35,-50,-36,-41,-80,-28,]),'IF':([42,43,71,72,82,83,84,85,88,92,93,103,116,122,125,128,129,133,134,136,140,143,146,147,151,152,154,155,158,159,160,161,162,174,177,183,184,186,],[-80,-6,86,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,86,86,-33,-34,-38,-43,-51,86,86,-37,-42,-40,-35,86,-50,-36,-41,-80,164,86,164,164,164,164,164,]),'FOR':([42,43,71,72,82,83,84,85,88,92,93,103,116,122,125,128,129,133,134,136,140,143,146,147,151,152,154,155,158,159,160,161,162,174,177,183,184,186,],[-80,-6,89,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,89,89,-33,-34,-38,-43,-51,89,89,-37,-42,-40,-35,89,-50,-36,-41,-80,165,89,165,165,165,165,165,]),'WHILE':([42,43,71,72,82,83,84,85,88,92,93,103,116,122,125,128,129,133,134,136,140,143,146,147,151,152,154,155,158,159,160,161,162,174,177,183,184,186,],[-80,-6,90,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,90,90,-33,-34,-38,-43,-51,90,90,-37,-42,-40,-35,90,-50,-36,-41,-80,166,90,166,166,166,166,166,]),'RETURN':([42,43,71,72,82,83,84,85,88,92,93,103,116,122,125,128,129,133,134,136,140,143,146,147,151,152,154,155,158,159,160,161,162,174,177,183,184,186,],[-80,-6,91,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,91,91,-33,-34,-38,-43,-51,91,91,-37,-42,-40,-35,91,-50,-36,-41,-80,91,91,91,91,91,91,91,]),'ON':([42,43,71,72,82,83,84,85,88,92,93,103,116,122,125,128,129,133,134,136,140,143,146,147,151,152,154,155,158,159,160,161,162,174,177,183,184,186,],[-80,-6,94,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,94,94,-33,-34,-38,-43,-51,94,94,-37,-42,-40,-35,94,-50,-36,-41,-80,94,94,94,94,94,94,94,]),'PRINT':([42,43,71,72,82,83,84,85,88,92,93,103,116,122,125,128,129,133,134,136,140,143,146,147,151,152,154,155,158,159,160,161,162,174,177,183,184,186,],[-80,-6,95,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,95,95,-33,-34,-38,-43,-51,95,95,-37,-42,-40,-35,95,-50,-36,-41,-80,95,95,95,95,95,95,95,]),'WHERE':([43,72,82,83,84,85,88,92,93,103,116,128,129,133,134,135,136,141,142,146,147,149,151,152,155,158,159,160,162,],[-6,-24,-22,-23,-31,-32,-39,-48,-49,-47,-46,-33,-34,-38,-43,-80,-51,150,-30,-37,-42,-29,-40,-35,-50,-36,-41,-80,-28,]),'ELSE':([43,82,88,92,93,103,116,128,130,134,136,137,138,147,151,155,159,163,178,181,],[-6,-22,-39,-48,-49,-47,-46,-39,-80,-43,-51,143,-45,-42,-40,-50,-41,-44,-80,184,]),'ELSEIF':([43,82,88,92,93,103,116,128,130,134,136,137,138,147,151,155,159,163,178,181,],[-6,-22,-39,-48,-49,-47,-46,-39,-80,-43,-51,144,-45,-42,-40,-50,-41,-44,-80,144,]),'IN':([114,172,],[124,176,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'eps':([0,18,26,42,130,135,160,178,],[3,39,47,72,138,142,72,138,]),'dec':([2,],[5,]),'vardec':([2,71,122,125,140,143,154,161,162,174,177,183,184,186,],[6,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'funcdec':([2,],[7,]),'idlist':([2,71,122,125,140,143,154,161,162,174,177,183,184,186,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'iddec':([2,15,71,122,125,140,143,154,161,162,174,177,183,184,186,],[11,25,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'lvalue':([2,15,17,18,19,30,31,32,50,51,65,70,71,91,102,104,105,107,109,122,123,125,139,140,143,153,154,161,162,167,168,169,174,175,177,182,183,184,186,],[12,12,28,28,28,28,28,28,28,28,28,28,96,28,28,28,28,28,28,96,28,96,28,96,96,28,96,96,96,28,28,28,96,28,96,28,96,96,96,]),'type':([14,73,99,110,],[21,97,111,120,]),'exp':([17,18,19,30,31,32,50,51,65,70,71,91,102,104,105,107,109,122,123,125,139,140,143,153,154,161,162,167,168,169,174,175,177,182,183,184,186,],[27,38,40,66,67,68,77,78,79,81,87,106,112,113,115,117,119,87,131,87,145,87,87,157,87,87,87,170,171,173,87,179,87,185,87,87,87,]),'const':([17,18,19,30,31,32,50,51,65,70,71,91,102,104,105,107,109,122,123,125,139,140,143,150,153,154,161,162,167,168,169,174,175,177,182,183,184,186,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,156,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'explist':([18,],[37,]),'block':([20,71,75,111,122,125,140,143,154,161,162,174,177,183,184,186,],[41,92,100,121,92,92,92,92,92,92,92,92,92,92,92,92,]),'paramdecs':([26,],[45,]),'paramdecslist':([26,],[46,]),'paramdec':([26,76,],[48,101,]),'operator':([27,38,40,66,67,68,77,78,79,81,87,106,112,113,115,117,119,131,145,157,170,171,173,179,185,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'relop':([27,38,40,66,67,68,77,78,79,81,87,106,112,113,115,117,119,131,145,157,170,171,173,179,185,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'stmtlist':([42,160,],[71,162,]),'stmt':([71,162,],[83,83,]),'ostmt':([71,122,125,140,143,154,162,],[84,129,133,146,152,158,84,]),'cstmt':([71,122,125,140,143,154,161,162,174,177,183,184,186,],[85,130,134,147,151,159,163,85,178,134,147,151,159,]),'simple':([71,122,125,140,143,154,161,162,174,177,183,184,186,],[88,128,88,88,88,88,88,88,88,88,88,88,88,]),'elseiflist':([130,178,],[137,181,]),'cases':([135,],[141,]),'case':([141,],[149,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program','parser.py',15),
  ('declist -> declist dec','declist',2,'p_declist','parser.py',20),
  ('declist -> eps','declist',1,'p_declist','parser.py',21),
  ('dec -> vardec','dec',1,'p_dec','parser.py',27),
  ('dec -> funcdec','dec',1,'p_dec','parser.py',28),
  ('vardec -> idlist COLON type SEMICOLON','vardec',4,'p_vardec','parser.py',33),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block','funcdec',8,'p_funcdec','parser.py',38),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB block','funcdec',6,'p_funcdec','parser.py',39),
  ('type -> INTEGER','type',1,'p_type','parser.py',44),
  ('type -> FLOAT','type',1,'p_type','parser.py',45),
  ('type -> BOOLEAN','type',1,'p_type','parser.py',46),
  ('iddec -> lvalue','iddec',1,'p_iddec','parser.py',51),
  ('iddec -> lvalue ASSIGN exp','iddec',3,'p_iddec','parser.py',52),
  ('idlist -> iddec','idlist',1,'p_idlist','parser.py',58),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist','parser.py',59),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs','parser.py',65),
  ('paramdecs -> eps','paramdecs',1,'p_paramdecs','parser.py',66),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist','parser.py',71),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist','parser.py',72),
  ('paramdec -> ID COLON type','paramdec',3,'p_paramdec','parser.py',78),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec','parser.py',79),
  ('block -> LCB stmtlist RCB','block',3,'p_block','parser.py',84),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',89),
  ('stmtlist -> eps','stmtlist',1,'p_stmtlist','parser.py',90),
  ('lvalue -> ID','lvalue',1,'p_lvalue','parser.py',95),
  ('lvalue -> ID LSB exp RSB','lvalue',4,'p_lvalue','parser.py',96),
  ('lvalue -> ID LRB explist RRB','lvalue',4,'p_lvalue','parser.py',97),
  ('case -> WHERE const COLON stmtlist','case',4,'p_case','parser.py',102),
  ('cases -> cases case','cases',2,'p_cases','parser.py',107),
  ('cases -> eps','cases',1,'p_cases','parser.py',108),
  ('stmt -> ostmt','stmt',1,'p_stmt','parser.py',114),
  ('stmt -> cstmt','stmt',1,'p_stmt','parser.py',115),
  ('ostmt -> IF LRB exp RRB simple','ostmt',5,'p_ostmt','parser.py',120),
  ('ostmt -> IF LRB exp RRB ostmt','ostmt',5,'p_ostmt','parser.py',121),
  ('ostmt -> IF LRB exp RRB cstmt elseiflist ELSE ostmt','ostmt',8,'p_ostmt','parser.py',122),
  ('ostmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB ostmt','ostmt',9,'p_ostmt','parser.py',123),
  ('ostmt -> FOR LRB ID IN ID RRB ostmt','ostmt',7,'p_ostmt','parser.py',124),
  ('ostmt -> WHILE LRB exp RRB ostmt','ostmt',5,'p_ostmt','parser.py',125),
  ('cstmt -> simple','cstmt',1,'p_cstmt','parser.py',130),
  ('cstmt -> IF LRB exp RRB cstmt elseiflist ELSE cstmt','cstmt',8,'p_cstmt','parser.py',131),
  ('cstmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB cstmt','cstmt',9,'p_cstmt','parser.py',132),
  ('cstmt -> FOR LRB ID IN ID RRB cstmt','cstmt',7,'p_cstmt','parser.py',133),
  ('cstmt -> WHILE LRB exp RRB cstmt','cstmt',5,'p_cstmt','parser.py',134),
  ('elseiflist -> elseiflist ELSEIF LRB exp RRB cstmt','elseiflist',6,'p_elseiflist','parser.py',139),
  ('elseiflist -> eps','elseiflist',1,'p_elseiflist','parser.py',140),
  ('simple -> RETURN exp SEMICOLON','simple',3,'p_simple','parser.py',145),
  ('simple -> exp SEMICOLON','simple',2,'p_simple','parser.py',146),
  ('simple -> block','simple',1,'p_simple','parser.py',147),
  ('simple -> vardec','simple',1,'p_simple','parser.py',148),
  ('simple -> ON LRB exp RRB LCB cases RCB SEMICOLON','simple',8,'p_simple','parser.py',149),
  ('simple -> PRINT LRB ID RRB SEMICOLON','simple',5,'p_simple','parser.py',150),
  ('relop -> GT','relop',1,'p_relop','parser.py',155),
  ('relop -> GE','relop',1,'p_relop','parser.py',156),
  ('relop -> LT','relop',1,'p_relop','parser.py',157),
  ('relop -> LE','relop',1,'p_relop','parser.py',158),
  ('relop -> EQ','relop',1,'p_relop','parser.py',159),
  ('relop -> NE','relop',1,'p_relop','parser.py',160),
  ('exp -> lvalue ASSIGN exp','exp',3,'p_exp','parser.py',165),
  ('exp -> exp operator exp','exp',3,'p_exp','parser.py',166),
  ('exp -> exp relop exp','exp',3,'p_exp','parser.py',167),
  ('exp -> const','exp',1,'p_exp','parser.py',168),
  ('exp -> lvalue','exp',1,'p_exp','parser.py',169),
  ('exp -> LRB exp RRB','exp',3,'p_exp','parser.py',170),
  ('exp -> SUB exp','exp',2,'p_exp','parser.py',171),
  ('exp -> NOT exp','exp',2,'p_exp','parser.py',172),
  ('operator -> AND','operator',1,'p_operator','parser.py',177),
  ('operator -> OR','operator',1,'p_operator','parser.py',178),
  ('operator -> SUM','operator',1,'p_operator','parser.py',179),
  ('operator -> SUB','operator',1,'p_operator','parser.py',180),
  ('operator -> MUL','operator',1,'p_operator','parser.py',181),
  ('operator -> DIV','operator',1,'p_operator','parser.py',182),
  ('operator -> MOD','operator',1,'p_operator','parser.py',183),
  ('const -> INTEGERNUMBER','const',1,'p_const','parser.py',188),
  ('const -> FLOATNUMBER','const',1,'p_const','parser.py',189),
  ('const -> TRUE','const',1,'p_const','parser.py',190),
  ('const -> FALSE','const',1,'p_const','parser.py',191),
  ('explist -> exp','explist',1,'p_explist','parser.py',196),
  ('explist -> explist COMMA exp','explist',3,'p_explist','parser.py',197),
  ('explist -> eps','explist',1,'p_explist','parser.py',198),
  ('eps -> <empty>','eps',0,'p_eps','parser.py',203),
]
